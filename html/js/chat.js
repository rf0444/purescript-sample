(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var React_DOM = require("React.DOM");
var React = require("React");
var Prelude = require("Prelude");
var React_DOM_Props = require("React.DOM.Props");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var initialState = 0;
var incrementCounter = function (ctx) {
    return function (e) {
        return function __do() {
            var _0 = React.readState(ctx)();
            return React.writeState(ctx)(Prelude["+"](Prelude.semiringInt)(_0)(1))();
        };
    };
};
var counter = React.mkUI(React.spec(initialState)(function (ctx) {
    return function __do() {
        var _1 = React.readState(ctx)();
        return Prelude["return"](Control_Monad_Eff.applicativeEff)(React_DOM.p([ React_DOM_Props.className("Counter"), React_DOM_Props.onClick(incrementCounter(ctx)) ])([ React_DOM.text(Prelude.show(Prelude.showInt)(_1)), React_DOM.text(" Click me to increment!") ]))();
    };
}));
var main = (function () {
    var component = React_DOM.div([  ])([ counter({}) ]);
    return React.renderToBody(component);
})();
module.exports = {
    main: main
};

},{"Control.Monad.Eff":5,"DOM":6,"Prelude":8,"React":14,"React.DOM":12,"React.DOM.Props":10}],2:[function(require,module,exports){
/* global exports, console */
"use strict";

// module Control.Monad.Eff.Console

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

},{}],3:[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var print = function (__dict_Show_0) {
    return Prelude["<<<"](Prelude.semigroupoidFn)($foreign.log)(Prelude.show(__dict_Show_0));
};
module.exports = {
    print: print, 
    error: $foreign.error, 
    log: $foreign.log
};

},{"./foreign":2,"Control.Monad.Eff":5,"Prelude":8}],4:[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],5:[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    foreachE: $foreign.foreachE, 
    forE: $foreign.forE, 
    whileE: $foreign.whileE, 
    untilE: $foreign.untilE, 
    runPure: $foreign.runPure
};

},{"./foreign":4,"Prelude":8}],6:[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
module.exports = {};

},{}],7:[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Lattice --------------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

//- ComplementedLattice --------------------------------------------------------

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  return c === "'" ? "'\\''" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  return JSON.stringify(s);
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],8:[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Unit = function (x) {
    return x;
};
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function (map) {
    this.map = map;
};
var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function (__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function (append) {
    this.append = append;
};
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function (__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function (eq) {
    this.eq = eq;
};
var Ord = function (__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function (bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function (show) {
    this.show = show;
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zero = function (dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function (dict) {
    return dict.top;
};
var sub = function (dict) {
    return dict.sub;
};
var $minus = function (__dict_Ring_0) {
    return sub(__dict_Ring_0);
};
var showUnit = new Show(function (_39) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (_40) {
    if (_40 instanceof LT) {
        return "LT";
    };
    if (_40 instanceof GT) {
        return "GT";
    };
    if (_40 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at /vagrant/purescript-sample/psc/bower_components/purescript-prelude/src/Prelude.purs line 851, column 1 - line 856, column 1: " + [ _40.constructor.name ]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (_38) {
    if (_38) {
        return "true";
    };
    if (!_38) {
        return "false";
    };
    throw new Error("Failed pattern match at /vagrant/purescript-sample/psc/bower_components/purescript-prelude/src/Prelude.purs line 829, column 1 - line 833, column 1: " + [ _38.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_1) {
    return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
};
var semiringUnit = new Semiring(function (_11) {
    return function (_12) {
        return unit;
    };
}, function (_13) {
    return function (_14) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_8) {
    return function (_9) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (_10) {
    return function (y) {
        if (_10 instanceof LT) {
            return LT.value;
        };
        if (_10 instanceof GT) {
            return GT.value;
        };
        if (_10 instanceof EQ) {
            return y;
        };
        throw new Error("Failed pattern match at /vagrant/purescript-sample/psc/bower_components/purescript-prelude/src/Prelude.purs line 413, column 1 - line 418, column 1: " + [ _10.constructor.name, y.constructor.name ]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (_15) {
    return function (_16) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Applicative_2) {
    return pure(__dict_Applicative_2);
};
var otherwise = true;
var one = function (dict) {
    return dict.one;
};
var not = function (dict) {
    return dict.not;
};
var negate = function (__dict_Ring_3) {
    return function (a) {
        return $minus(__dict_Ring_3)(zero(__dict_Ring_3["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function (dict) {
    return dict.mul;
};
var $times = function (__dict_Semiring_4) {
    return mul(__dict_Semiring_4);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (_19) {
    return function (_20) {
        return unit;
    };
}, function (_21) {
    return function (_22) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (_17) {
    return function (_18) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function (dict) {
    return dict.mod;
};
var map = function (dict) {
    return dict.map;
};
var $less$dollar$greater = function (__dict_Functor_5) {
    return map(__dict_Functor_5);
};
var $less$hash$greater = function (__dict_Functor_6) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_6)(f)(fa);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_23) {
    return function (_24) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_27) {
    return function (_28) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (_25) {
    return function (_26) {
        if (_25 instanceof LT && _26 instanceof LT) {
            return true;
        };
        if (_25 instanceof GT && _26 instanceof GT) {
            return true;
        };
        if (_25 instanceof EQ && _26 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (_29) {
    return function (_30) {
        if (_29 instanceof LT && _30 instanceof LT) {
            return EQ.value;
        };
        if (_29 instanceof EQ && _30 instanceof EQ) {
            return EQ.value;
        };
        if (_29 instanceof GT && _30 instanceof GT) {
            return EQ.value;
        };
        if (_29 instanceof LT) {
            return LT.value;
        };
        if (_29 instanceof EQ && _30 instanceof LT) {
            return GT.value;
        };
        if (_29 instanceof EQ && _30 instanceof GT) {
            return LT.value;
        };
        if (_29 instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at /vagrant/purescript-sample/psc/bower_components/purescript-prelude/src/Prelude.purs line 668, column 1 - line 677, column 1: " + [ _29.constructor.name, _30.constructor.name ]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function (dict) {
    return dict.eq;
};
var $eq$eq = function (__dict_Eq_7) {
    return eq(__dict_Eq_7);
};
var eqArray = function (__dict_Eq_8) {
    return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function (dict) {
    return dict.div;
};
var $div = function (__dict_ModuloSemiring_10) {
    return div(__dict_ModuloSemiring_10);
};
var disj = function (dict) {
    return dict.disj;
};
var $bar$bar = function (__dict_BooleanAlgebra_11) {
    return disj(__dict_BooleanAlgebra_11);
};
var $$const = function (a) {
    return function (_6) {
        return a;
    };
};
var $$void = function (__dict_Functor_12) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
    };
};
var conj = function (dict) {
    return dict.conj;
};
var $amp$amp = function (__dict_BooleanAlgebra_13) {
    return conj(__dict_BooleanAlgebra_13);
};
var compose = function (dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function (__dict_Semigroupoid_14) {
    return compose(__dict_Semigroupoid_14);
};
var $greater$greater$greater = function (__dict_Semigroupoid_15) {
    return flip(compose(__dict_Semigroupoid_15));
};
var compare = function (dict) {
    return dict.compare;
};
var ordArray = function (__dict_Ord_16) {
    return new Ord(function () {
        return eqArray(__dict_Ord_16["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var _60 = compare(__dict_Ord_16)(x)(y);
                    if (_60 instanceof EQ) {
                        return 0;
                    };
                    if (_60 instanceof LT) {
                        return 1;
                    };
                    if (_60 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at /vagrant/purescript-sample/psc/bower_components/purescript-prelude/src/Prelude.purs line 660, column 1 - line 666, column 1: " + [ _60.constructor.name ]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function (__dict_Ord_17) {
    return function (a1) {
        return function (a2) {
            var _61 = compare(__dict_Ord_17)(a1)(a2);
            if (_61 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_18) {
    return function (a1) {
        return function (a2) {
            var _62 = compare(__dict_Ord_18)(a1)(a2);
            if (_62 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_19) {
    return function (a1) {
        return function (a2) {
            var _63 = compare(__dict_Ord_19)(a1)(a2);
            if (_63 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_20) {
    return function (a1) {
        return function (a2) {
            var _64 = compare(__dict_Ord_20)(a1)(a2);
            if (_64 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded(negate(ringInt)(2147483648), 2147483647);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function (dict) {
    return dict.bottom;
};
var boundedFn = function (__dict_Bounded_21) {
    return new Bounded(function (_32) {
        return bottom(__dict_Bounded_21);
    }, function (_31) {
        return top(__dict_Bounded_21);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (_33) {
    return function (_34) {
        return unit;
    };
}, function (_35) {
    return function (_36) {
        return unit;
    };
}, function (_37) {
    return unit;
});
var booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {
    return new BooleanAlgebra(function () {
        return boundedFn(__dict_BooleanAlgebra_22["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(__dict_BooleanAlgebra_22)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function (__dict_Eq_9) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));
        };
    };
};
var bind = function (dict) {
    return dict.bind;
};
var liftM1 = function (__dict_Monad_23) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_0));
            });
        };
    };
};
var $greater$greater$eq = function (__dict_Bind_24) {
    return bind(__dict_Bind_24);
};
var asTypeOf = function (x) {
    return function (_7) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function (dict) {
    return dict.apply;
};
var $less$times$greater = function (__dict_Apply_25) {
    return apply(__dict_Apply_25);
};
var liftA1 = function (__dict_Applicative_26) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function (dict) {
    return dict.append;
};
var $plus$plus = function (__dict_Semigroup_27) {
    return append(__dict_Semigroup_27);
};
var $less$greater = function (__dict_Semigroup_28) {
    return append(__dict_Semigroup_28);
};
var semigroupFn = function (__dict_Semigroup_29) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_29)(f(x))(g(x));
            };
        };
    });
};
var ap = function (__dict_Monad_30) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                    return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [ x ];
});
var add = function (dict) {
    return dict.add;
};
var $plus = function (__dict_Semiring_31) {
    return add(__dict_Semiring_31);
};
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    Show: Show, 
    BooleanAlgebra: BooleanAlgebra, 
    BoundedOrd: BoundedOrd, 
    Bounded: Bounded, 
    Ord: Ord, 
    Eq: Eq, 
    DivisionRing: DivisionRing, 
    Num: Num, 
    Ring: Ring, 
    ModuloSemiring: ModuloSemiring, 
    Semiring: Semiring, 
    Semigroup: Semigroup, 
    Monad: Monad, 
    Bind: Bind, 
    Applicative: Applicative, 
    Apply: Apply, 
    Functor: Functor, 
    Category: Category, 
    Semigroupoid: Semigroupoid, 
    show: show, 
    "||": $bar$bar, 
    "&&": $amp$amp, 
    not: not, 
    disj: disj, 
    conj: conj, 
    bottom: bottom, 
    top: top, 
    unsafeCompare: unsafeCompare, 
    ">=": $greater$eq, 
    "<=": $less$eq, 
    ">": $greater, 
    "<": $less, 
    compare: compare, 
    "/=": $div$eq, 
    "==": $eq$eq, 
    eq: eq, 
    "-": $minus, 
    negate: negate, 
    sub: sub, 
    "/": $div, 
    mod: mod, 
    div: div, 
    "*": $times, 
    "+": $plus, 
    one: one, 
    mul: mul, 
    zero: zero, 
    add: add, 
    "++": $plus$plus, 
    "<>": $less$greater, 
    append: append, 
    ap: ap, 
    liftM1: liftM1, 
    "return": $$return, 
    ">>=": $greater$greater$eq, 
    bind: bind, 
    liftA1: liftA1, 
    pure: pure, 
    "<*>": $less$times$greater, 
    apply: apply, 
    "void": $$void, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    map: map, 
    id: id, 
    ">>>": $greater$greater$greater, 
    "<<<": $less$less$less, 
    compose: compose, 
    otherwise: otherwise, 
    asTypeOf: asTypeOf, 
    "const": $$const, 
    flip: flip, 
    "#": $hash, 
    "$": $dollar, 
    unit: unit, 
    semigroupoidFn: semigroupoidFn, 
    categoryFn: categoryFn, 
    functorFn: functorFn, 
    functorArray: functorArray, 
    applyFn: applyFn, 
    applyArray: applyArray, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    monadFn: monadFn, 
    monadArray: monadArray, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupFn: semigroupFn, 
    semigroupOrdering: semigroupOrdering, 
    semigroupArray: semigroupArray, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    moduloSemiringInt: moduloSemiringInt, 
    moduloSemiringNumber: moduloSemiringNumber, 
    moduloSemiringUnit: moduloSemiringUnit, 
    divisionRingNumber: divisionRingNumber, 
    divisionRingUnit: divisionRingUnit, 
    numNumber: numNumber, 
    numUnit: numUnit, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqArray: eqArray, 
    eqOrdering: eqOrdering, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    boundedBoolean: boundedBoolean, 
    boundedUnit: boundedUnit, 
    boundedOrdering: boundedOrdering, 
    boundedInt: boundedInt, 
    boundedFn: boundedFn, 
    boundedOrdBoolean: boundedOrdBoolean, 
    boundedOrdUnit: boundedOrdUnit, 
    boundedOrdOrdering: boundedOrdOrdering, 
    boundedOrdInt: boundedOrdInt, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showUnit: showUnit, 
    showArray: showArray, 
    showOrdering: showOrdering
};

},{"./foreign":7}],9:[function(require,module,exports){
/* global exports */
"use strict";

// module React.DOM.Props

exports.unsafeMkProps = function(key) {
    return function(value) {
        var result = {};
        result[key] = value;
        return result;
    };
};

exports.unsafeUnfoldProps = function(key) {
    return function(value) {
        var result = {};

        for (var subprop in value) {
            if (value.hasOwnProperty(subprop)) {
                result[key + '-' + subprop] = value[subprop];
            }
        }

        return result;
    };
};

},{}],10:[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var React = require("React");
var Prelude = require("Prelude");
var wmode = $foreign.unsafeMkProps("wmode");
var width = $foreign.unsafeMkProps("width");
var value = $foreign.unsafeMkProps("value");
var useMap = $foreign.unsafeMkProps("useMap");
var title = $foreign.unsafeMkProps("title");
var target = $foreign.unsafeMkProps("target");
var tabIndex = $foreign.unsafeMkProps("tabIndex");
var style = $foreign.unsafeUnfoldProps("style");
var step = $foreign.unsafeMkProps("step");
var start = $foreign.unsafeMkProps("start");
var srcSet = $foreign.unsafeMkProps("srcSet");
var srcDoc = $foreign.unsafeMkProps("srcDoc");
var src = $foreign.unsafeMkProps("src");
var spellCheck = $foreign.unsafeMkProps("spellCheck");
var span = $foreign.unsafeMkProps("span");
var sizes = $foreign.unsafeMkProps("sizes");
var size = $foreign.unsafeMkProps("size");
var shape = $foreign.unsafeMkProps("shape");
var selected = $foreign.unsafeMkProps("selected");
var seamless = $foreign.unsafeMkProps("seamless");
var scrolling = $foreign.unsafeMkProps("scrolling");
var scope = $foreign.unsafeMkProps("scope");
var sandbox = $foreign.unsafeMkProps("sandbox");
var rows = $foreign.unsafeMkProps("rows");
var rowSpan = $foreign.unsafeMkProps("rowSpan");
var role = $foreign.unsafeMkProps("role");
var required = $foreign.unsafeMkProps("required");
var rel = $foreign.unsafeMkProps("rel");
var readOnly = $foreign.unsafeMkProps("readOnly");
var radioGroup = $foreign.unsafeMkProps("radioGroup");
var preload = $foreign.unsafeMkProps("preload");
var poster = $foreign.unsafeMkProps("poster");
var placeholder = $foreign.unsafeMkProps("placeholder");
var pattern = $foreign.unsafeMkProps("pattern");
var open = $foreign.unsafeMkProps("open");
var onWheel = function (f) {
    return $foreign.unsafeMkProps("onWheel")(React.handle(f));
};
var onTouchStart = function (f) {
    return $foreign.unsafeMkProps("onTouchStart")(React.handle(f));
};
var onTouchMove = function (f) {
    return $foreign.unsafeMkProps("onTouchMove")(React.handle(f));
};
var onTouchEnd = function (f) {
    return $foreign.unsafeMkProps("onTouchEnd")(React.handle(f));
};
var onTouchCancel = function (f) {
    return $foreign.unsafeMkProps("onTouchCancel")(React.handle(f));
};
var onSubmit = function (f) {
    return $foreign.unsafeMkProps("onSubmit")(React.handle(f));
};
var onScroll = function (f) {
    return $foreign.unsafeMkProps("onScroll")(React.handle(f));
};
var onPaste = function (f) {
    return $foreign.unsafeMkProps("onPaste")(React.handle(f));
};
var onMouseUp = function (f) {
    return $foreign.unsafeMkProps("onMouseUp")(React.handle(f));
};
var onMouseOver = function (f) {
    return $foreign.unsafeMkProps("onMouseOver")(React.handle(f));
};
var onMouseOut = function (f) {
    return $foreign.unsafeMkProps("onMouseOut")(React.handle(f));
};
var onMouseMove = function (f) {
    return $foreign.unsafeMkProps("onMouseMove")(React.handle(f));
};
var onMouseLeave = function (f) {
    return $foreign.unsafeMkProps("onMouseLeave")(React.handle(f));
};
var onMouseEnter = function (f) {
    return $foreign.unsafeMkProps("onMouseEnter")(React.handle(f));
};
var onMouseDown = function (f) {
    return $foreign.unsafeMkProps("onMouseDown")(React.handle(f));
};
var onKeyUp = function (f) {
    return $foreign.unsafeMkProps("onKeyUp")(React.handle(f));
};
var onKeyPress = function (f) {
    return $foreign.unsafeMkProps("onKeyPress")(React.handle(f));
};
var onKeyDown = function (f) {
    return $foreign.unsafeMkProps("onKeyDown")(React.handle(f));
};
var onInput = function (f) {
    return $foreign.unsafeMkProps("onInput")(React.handle(f));
};
var onFocus = function (f) {
    return $foreign.unsafeMkProps("onFocus")(React.handle(f));
};
var onDrop = function (f) {
    return $foreign.unsafeMkProps("onDrop")(React.handle(f));
};
var onDragStart = function (f) {
    return $foreign.unsafeMkProps("onDragStart")(React.handle(f));
};
var onDragOver = function (f) {
    return $foreign.unsafeMkProps("onDragOver")(React.handle(f));
};
var onDragLeave = function (f) {
    return $foreign.unsafeMkProps("onDragLeave")(React.handle(f));
};
var onDragExit = function (f) {
    return $foreign.unsafeMkProps("onDragExit")(React.handle(f));
};
var onDragEnter = function (f) {
    return $foreign.unsafeMkProps("onDragEnter")(React.handle(f));
};
var onDragEnd = function (f) {
    return $foreign.unsafeMkProps("onDragEnd")(React.handle(f));
};
var onDrag = function (f) {
    return $foreign.unsafeMkProps("onDrag")(React.handle(f));
};
var onDoubleClick = function (f) {
    return $foreign.unsafeMkProps("onDoubleClick")(React.handle(f));
};
var onCut = function (f) {
    return $foreign.unsafeMkProps("onCut")(React.handle(f));
};
var onCopy = function (f) {
    return $foreign.unsafeMkProps("onCopy")(React.handle(f));
};
var onClick = function (f) {
    return $foreign.unsafeMkProps("onClick")(React.handle(f));
};
var onChange = function (f) {
    return $foreign.unsafeMkProps("onChange")(React.handle(f));
};
var onBlur = function (f) {
    return $foreign.unsafeMkProps("onBlur")(React.handle(f));
};
var noValidate = $foreign.unsafeMkProps("noValidate");
var name = $foreign.unsafeMkProps("name");
var muted = $foreign.unsafeMkProps("muted");
var multiple = $foreign.unsafeMkProps("multiple");
var min = $foreign.unsafeMkProps("min");
var method = $foreign.unsafeMkProps("method");
var mediaGroup = $foreign.unsafeMkProps("mediaGroup");
var media = $foreign.unsafeMkProps("media");
var maxLength = $foreign.unsafeMkProps("maxLength");
var max = $foreign.unsafeMkProps("max");
var marginWidth = $foreign.unsafeMkProps("marginWidth");
var marginHeight = $foreign.unsafeMkProps("marginHeight");
var manifest = $foreign.unsafeMkProps("manifest");
var loop = $foreign.unsafeMkProps("loop");
var list = $foreign.unsafeMkProps("list");
var lang = $foreign.unsafeMkProps("lang");
var label = $foreign.unsafeMkProps("label");
var key = $foreign.unsafeMkProps("key");
var icon = $foreign.unsafeMkProps("icon");
var httpEquiv = $foreign.unsafeMkProps("httpEquiv");
var htmlFor = $foreign.unsafeMkProps("htmlFor");
var hrefLang = $foreign.unsafeMkProps("hrefLang");
var href = $foreign.unsafeMkProps("href");
var hidden = $foreign.unsafeMkProps("hidden");
var height = $foreign.unsafeMkProps("height");
var frameBorder = $foreign.unsafeMkProps("frameBorder");
var formTarget = $foreign.unsafeMkProps("formTarget");
var formNoValidate = $foreign.unsafeMkProps("formNoValidate");
var formMethod = $foreign.unsafeMkProps("formMethod");
var formEncType = $foreign.unsafeMkProps("formEncType");
var formAction = $foreign.unsafeMkProps("formAction");
var form = $foreign.unsafeMkProps("form");
var encType = $foreign.unsafeMkProps("encType");
var draggable = $foreign.unsafeMkProps("draggable");
var download = $foreign.unsafeMkProps("download");
var disabled = $foreign.unsafeMkProps("disabled");
var dir = $foreign.unsafeMkProps("dir");
var defer = $foreign.unsafeMkProps("defer");
var dateTime = $foreign.unsafeMkProps("dateTime");
var dangerouslySetInnerHTML = $foreign.unsafeMkProps("dangerouslySetInnerHTML");
var crossOrigin = $foreign.unsafeMkProps("crossOrigin");
var coords = $foreign.unsafeMkProps("coords");
var controls = $foreign.unsafeMkProps("controls");
var contextMenu = $foreign.unsafeMkProps("contextMenu");
var contentEditable = $foreign.unsafeMkProps("contentEditable");
var content = $foreign.unsafeMkProps("content");
var cols = $foreign.unsafeMkProps("cols");
var colSpan = $foreign.unsafeMkProps("colSpan");
var className = $foreign.unsafeMkProps("className");
var classID = $foreign.unsafeMkProps("classID");
var checked = $foreign.unsafeMkProps("checked");
var charSet = $foreign.unsafeMkProps("charSet");
var cellSpacing = $foreign.unsafeMkProps("cellSpacing");
var cellPadding = $foreign.unsafeMkProps("cellPadding");
var autoPlay = $foreign.unsafeMkProps("autoPlay");
var autoFocus = $foreign.unsafeMkProps("autoFocus");
var autoComplete = $foreign.unsafeMkProps("autoComplete");
var async = $foreign.unsafeMkProps("async");
var aria = $foreign.unsafeUnfoldProps("aria");
var alt = $foreign.unsafeMkProps("alt");
var allowTransparency = $foreign.unsafeMkProps("allowTransparency");
var allowFullScreen = $foreign.unsafeMkProps("allowFullScreen");
var action = $foreign.unsafeMkProps("action");
var accessKey = $foreign.unsafeMkProps("accessKey");
var acceptCharset = $foreign.unsafeMkProps("acceptCharset");
var accept = $foreign.unsafeMkProps("accept");
var _type = $foreign.unsafeMkProps("type");
var _id = $foreign.unsafeMkProps("id");
var _data = $foreign.unsafeUnfoldProps("data");
module.exports = {
    onWheel: onWheel, 
    onScroll: onScroll, 
    onTouchStart: onTouchStart, 
    onTouchMove: onTouchMove, 
    onTouchEnd: onTouchEnd, 
    onTouchCancel: onTouchCancel, 
    onMouseUp: onMouseUp, 
    onMouseOver: onMouseOver, 
    onMouseOut: onMouseOut, 
    onMouseMove: onMouseMove, 
    onMouseLeave: onMouseLeave, 
    onMouseEnter: onMouseEnter, 
    onMouseDown: onMouseDown, 
    onDrop: onDrop, 
    onDragStart: onDragStart, 
    onDragOver: onDragOver, 
    onDragLeave: onDragLeave, 
    onDragExit: onDragExit, 
    onDragEnter: onDragEnter, 
    onDragEnd: onDragEnd, 
    onDrag: onDrag, 
    onDoubleClick: onDoubleClick, 
    onClick: onClick, 
    onSubmit: onSubmit, 
    onInput: onInput, 
    onChange: onChange, 
    onBlur: onBlur, 
    onFocus: onFocus, 
    onKeyUp: onKeyUp, 
    onKeyPress: onKeyPress, 
    onKeyDown: onKeyDown, 
    onPaste: onPaste, 
    onCut: onCut, 
    onCopy: onCopy, 
    wmode: wmode, 
    width: width, 
    value: value, 
    useMap: useMap, 
    _type: _type, 
    title: title, 
    target: target, 
    tabIndex: tabIndex, 
    step: step, 
    start: start, 
    srcSet: srcSet, 
    srcDoc: srcDoc, 
    src: src, 
    spellCheck: spellCheck, 
    span: span, 
    sizes: sizes, 
    size: size, 
    shape: shape, 
    selected: selected, 
    seamless: seamless, 
    scrolling: scrolling, 
    scope: scope, 
    sandbox: sandbox, 
    rowSpan: rowSpan, 
    rows: rows, 
    role: role, 
    required: required, 
    rel: rel, 
    readOnly: readOnly, 
    radioGroup: radioGroup, 
    preload: preload, 
    poster: poster, 
    placeholder: placeholder, 
    pattern: pattern, 
    open: open, 
    noValidate: noValidate, 
    name: name, 
    muted: muted, 
    multiple: multiple, 
    min: min, 
    method: method, 
    mediaGroup: mediaGroup, 
    media: media, 
    maxLength: maxLength, 
    max: max, 
    marginWidth: marginWidth, 
    marginHeight: marginHeight, 
    manifest: manifest, 
    loop: loop, 
    list: list, 
    lang: lang, 
    label: label, 
    key: key, 
    _id: _id, 
    icon: icon, 
    httpEquiv: httpEquiv, 
    htmlFor: htmlFor, 
    hrefLang: hrefLang, 
    href: href, 
    hidden: hidden, 
    height: height, 
    frameBorder: frameBorder, 
    formTarget: formTarget, 
    formNoValidate: formNoValidate, 
    formMethod: formMethod, 
    formEncType: formEncType, 
    formAction: formAction, 
    form: form, 
    encType: encType, 
    draggable: draggable, 
    download: download, 
    disabled: disabled, 
    dir: dir, 
    defer: defer, 
    dateTime: dateTime, 
    crossOrigin: crossOrigin, 
    coords: coords, 
    controls: controls, 
    contextMenu: contextMenu, 
    contentEditable: contentEditable, 
    content: content, 
    colSpan: colSpan, 
    cols: cols, 
    className: className, 
    classID: classID, 
    checked: checked, 
    charSet: charSet, 
    cellSpacing: cellSpacing, 
    cellPadding: cellPadding, 
    autoPlay: autoPlay, 
    autoFocus: autoFocus, 
    autoComplete: autoComplete, 
    async: async, 
    alt: alt, 
    allowTransparency: allowTransparency, 
    allowFullScreen: allowFullScreen, 
    action: action, 
    accessKey: accessKey, 
    acceptCharset: acceptCharset, 
    accept: accept, 
    dangerouslySetInnerHTML: dangerouslySetInnerHTML, 
    style: style, 
    _data: _data, 
    aria: aria, 
    unsafeUnfoldProps: $foreign.unsafeUnfoldProps, 
    unsafeMkProps: $foreign.unsafeMkProps
};

},{"./foreign":9,"Prelude":8,"React":14}],11:[function(require,module,exports){
/* global exports */
"use strict";

// module React.DOM

function mkProps(props) {
    var result = {};
    
    for (var i = 0, len = props.length; i < len; i++) {
        var prop = props[i];
        
        for (var key in prop) {
            if (prop.hasOwnProperty(key)) {
                result[key] = prop[key];
            }
        }
    }
    
    return result;
};

exports.mkDOM = function(tagName) {
    return function(props) {
        return function(children) {
            return React.createElement(tagName, props.length > 0 ? mkProps(props) : null, children);
        }
    }
};

exports.text = function(text) {
    return text;
};

},{}],12:[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var React = require("React");
var React_DOM_Props = require("React.DOM.Props");
var wbr = $foreign.mkDOM("body");
var wbr$prime = wbr([  ]);
var video = $foreign.mkDOM("video");
var video$prime = video([  ]);
var $$var = $foreign.mkDOM("var");
var var$prime = $$var([  ]);
var ul = $foreign.mkDOM("ul");
var ul$prime = ul([  ]);
var u = $foreign.mkDOM("u");
var u$prime = u([  ]);
var track = $foreign.mkDOM("track");
var track$prime = track([  ]);
var tr = $foreign.mkDOM("tr");
var tr$prime = tr([  ]);
var title = $foreign.mkDOM("title");
var title$prime = title([  ]);
var time = $foreign.mkDOM("time");
var time$prime = time([  ]);
var thead = $foreign.mkDOM("thead");
var thead$prime = thead([  ]);
var th = $foreign.mkDOM("th");
var th$prime = th([  ]);
var tfoot = $foreign.mkDOM("tfoot");
var tfoot$prime = tfoot([  ]);
var textarea = $foreign.mkDOM("textarea");
var textarea$prime = textarea([  ]);
var td = $foreign.mkDOM("td");
var td$prime = td([  ]);
var tbody = $foreign.mkDOM("tbody");
var tbody$prime = tbody([  ]);
var table = $foreign.mkDOM("table");
var table$prime = table([  ]);
var sup = $foreign.mkDOM("sup");
var sup$prime = sup([  ]);
var summary = $foreign.mkDOM("summary");
var summary$prime = summary([  ]);
var sub = $foreign.mkDOM("sub");
var sub$prime = sub([  ]);
var style = $foreign.mkDOM("style");
var style$prime = style([  ]);
var strong = $foreign.mkDOM("strong");
var strong$prime = strong([  ]);
var span = $foreign.mkDOM("span");
var span$prime = span([  ]);
var source = $foreign.mkDOM("source");
var source$prime = source([  ]);
var small = $foreign.mkDOM("small");
var small$prime = small([  ]);
var select = $foreign.mkDOM("select");
var select$prime = select([  ]);
var section = $foreign.mkDOM("section");
var section$prime = section([  ]);
var script = $foreign.mkDOM("script");
var script$prime = script([  ]);
var samp = $foreign.mkDOM("samp");
var samp$prime = samp([  ]);
var s = $foreign.mkDOM("s");
var s$prime = s([  ]);
var ruby = $foreign.mkDOM("ruby");
var ruby$prime = ruby([  ]);
var rt = $foreign.mkDOM("rt");
var rt$prime = rt([  ]);
var rp = $foreign.mkDOM("rp");
var rp$prime = rp([  ]);
var q = $foreign.mkDOM("q");
var q$prime = q([  ]);
var progress = $foreign.mkDOM("progress");
var progress$prime = progress([  ]);
var pre = $foreign.mkDOM("pre");
var pre$prime = pre([  ]);
var picture = $foreign.mkDOM("picture");
var picture$prime = picture([  ]);
var param = $foreign.mkDOM("param");
var param$prime = param([  ]);
var p = $foreign.mkDOM("p");
var p$prime = p([  ]);
var output = $foreign.mkDOM("output");
var output$prime = output([  ]);
var option = $foreign.mkDOM("option");
var option$prime = option([  ]);
var optgroup = $foreign.mkDOM("optgroup");
var optgroup$prime = optgroup([  ]);
var ol = $foreign.mkDOM("ol");
var ol$prime = ol([  ]);
var object = $foreign.mkDOM("object");
var object$prime = object([  ]);
var noscript = $foreign.mkDOM("noscript");
var noscript$prime = noscript([  ]);
var nav = $foreign.mkDOM("nav");
var nav$prime = nav([  ]);
var meter = $foreign.mkDOM("meter");
var meter$prime = meter([  ]);
var meta = $foreign.mkDOM("meta");
var meta$prime = meta([  ]);
var menuitem = $foreign.mkDOM("menuitem");
var menuitem$prime = menuitem([  ]);
var menu = $foreign.mkDOM("menu");
var menu$prime = menu([  ]);
var mark = $foreign.mkDOM("mark");
var mark$prime = mark([  ]);
var map = $foreign.mkDOM("map");
var map$prime = map([  ]);
var main = $foreign.mkDOM("main");
var main$prime = main([  ]);
var link = $foreign.mkDOM("link");
var li = $foreign.mkDOM("li");
var li$prime = li([  ]);
var legend = $foreign.mkDOM("legend");
var legend$prime = legend([  ]);
var label = $foreign.mkDOM("label");
var label$prime = label([  ]);
var keygen = $foreign.mkDOM("keygen");
var keygen$prime = keygen([  ]);
var kbd = $foreign.mkDOM("kbd");
var kbd$prime = kbd([  ]);
var ins = $foreign.mkDOM("ins");
var ins$prime = ins([  ]);
var input = $foreign.mkDOM("input");
var input$prime = input([  ]);
var img = $foreign.mkDOM("img");
var img$prime = img([  ]);
var iframe = $foreign.mkDOM("iframe");
var iframe$prime = iframe([  ]);
var i = $foreign.mkDOM("i");
var i$prime = i([  ]);
var html = $foreign.mkDOM("html");
var html$prime = html([  ]);
var hr = $foreign.mkDOM("hr");
var hr$prime = hr([  ]);
var header = $foreign.mkDOM("header");
var header$prime = header([  ]);
var head = $foreign.mkDOM("head");
var head$prime = head([  ]);
var h6 = $foreign.mkDOM("h6");
var h6$prime = h6([  ]);
var h5 = $foreign.mkDOM("h5");
var h5$prime = h5([  ]);
var h4 = $foreign.mkDOM("h4");
var h4$prime = h4([  ]);
var h3 = $foreign.mkDOM("h3");
var h3$prime = h3([  ]);
var h2 = $foreign.mkDOM("h2");
var h2$prime = h2([  ]);
var h1 = $foreign.mkDOM("h1");
var h1$prime = h1([  ]);
var form = $foreign.mkDOM("form");
var form$prime = form([  ]);
var footer = $foreign.mkDOM("footer");
var footer$prime = footer([  ]);
var figure = $foreign.mkDOM("figure");
var figure$prime = figure([  ]);
var figcaption = $foreign.mkDOM("figcaption");
var figcaption$prime = figcaption([  ]);
var fieldset = $foreign.mkDOM("fieldset");
var fieldset$prime = fieldset([  ]);
var embed = $foreign.mkDOM("embed");
var embed$prime = embed([  ]);
var em = $foreign.mkDOM("em");
var em$prime = em([  ]);
var dt = $foreign.mkDOM("dt");
var dt$prime = dt([  ]);
var dl = $foreign.mkDOM("dl");
var dl$prime = dl([  ]);
var div = $foreign.mkDOM("div");
var div$prime = div([  ]);
var dialog = $foreign.mkDOM("dialog");
var dialog$prime = dialog([  ]);
var dfn = $foreign.mkDOM("dfn");
var dfn$prime = dfn([  ]);
var details = $foreign.mkDOM("details");
var details$prime = details([  ]);
var del = $foreign.mkDOM("del");
var del$prime = del([  ]);
var dd = $foreign.mkDOM("dd");
var dd$prime = dd([  ]);
var datalist = $foreign.mkDOM("datalist");
var datalist$prime = datalist([  ]);
var colgroup = $foreign.mkDOM("colgroup");
var colgroup$prime = colgroup([  ]);
var col = $foreign.mkDOM("col");
var col$prime = col([  ]);
var code = $foreign.mkDOM("code");
var code$prime = code([  ]);
var cite = $foreign.mkDOM("cite");
var cite$prime = cite([  ]);
var caption = $foreign.mkDOM("caption");
var caption$prime = caption([  ]);
var canvas = $foreign.mkDOM("canvas");
var canvas$prime = canvas([  ]);
var button = $foreign.mkDOM("button");
var button$prime = button([  ]);
var br = $foreign.mkDOM("br");
var br$prime = br([  ]);
var body = $foreign.mkDOM("body");
var body$prime = body([  ]);
var link$prime = body([  ]);
var blockquote = $foreign.mkDOM("blockquote");
var blockquote$prime = blockquote([  ]);
var big = $foreign.mkDOM("big");
var big$prime = big([  ]);
var bdo = $foreign.mkDOM("bdo");
var bdo$prime = bdo([  ]);
var bdi = $foreign.mkDOM("bdi");
var bdi$prime = bdi([  ]);
var base = $foreign.mkDOM("base");
var base$prime = base([  ]);
var b = $foreign.mkDOM("b");
var b$prime = b([  ]);
var audio = $foreign.mkDOM("audio");
var audio$prime = audio([  ]);
var aside = $foreign.mkDOM("aside");
var aside$prime = aside([  ]);
var article = $foreign.mkDOM("article");
var article$prime = article([  ]);
var area = $foreign.mkDOM("area");
var area$prime = area([  ]);
var address = $foreign.mkDOM("address");
var address$prime = address([  ]);
var abbr = $foreign.mkDOM("abbr");
var abbr$prime = abbr([  ]);
var a = $foreign.mkDOM("a");
var a$prime = a([  ]);
var _data = $foreign.mkDOM("data");
var _data$prime = _data([  ]);
module.exports = {
    "wbr'": wbr$prime, 
    wbr: wbr, 
    "video'": video$prime, 
    video: video, 
    "var'": var$prime, 
    "var": $$var, 
    "ul'": ul$prime, 
    ul: ul, 
    "u'": u$prime, 
    u: u, 
    "track'": track$prime, 
    track: track, 
    "tr'": tr$prime, 
    tr: tr, 
    "title'": title$prime, 
    title: title, 
    "time'": time$prime, 
    time: time, 
    "thead'": thead$prime, 
    thead: thead, 
    "th'": th$prime, 
    th: th, 
    "tfoot'": tfoot$prime, 
    tfoot: tfoot, 
    "textarea'": textarea$prime, 
    textarea: textarea, 
    "td'": td$prime, 
    td: td, 
    "tbody'": tbody$prime, 
    tbody: tbody, 
    "table'": table$prime, 
    table: table, 
    "sup'": sup$prime, 
    sup: sup, 
    "summary'": summary$prime, 
    summary: summary, 
    "sub'": sub$prime, 
    sub: sub, 
    "style'": style$prime, 
    style: style, 
    "strong'": strong$prime, 
    strong: strong, 
    "span'": span$prime, 
    span: span, 
    "source'": source$prime, 
    source: source, 
    "small'": small$prime, 
    small: small, 
    "select'": select$prime, 
    select: select, 
    "section'": section$prime, 
    section: section, 
    "script'": script$prime, 
    script: script, 
    "samp'": samp$prime, 
    samp: samp, 
    "s'": s$prime, 
    s: s, 
    "ruby'": ruby$prime, 
    ruby: ruby, 
    "rt'": rt$prime, 
    rt: rt, 
    "rp'": rp$prime, 
    rp: rp, 
    "q'": q$prime, 
    q: q, 
    "progress'": progress$prime, 
    progress: progress, 
    "pre'": pre$prime, 
    pre: pre, 
    "picture'": picture$prime, 
    picture: picture, 
    "param'": param$prime, 
    param: param, 
    "p'": p$prime, 
    p: p, 
    "output'": output$prime, 
    output: output, 
    "option'": option$prime, 
    option: option, 
    "optgroup'": optgroup$prime, 
    optgroup: optgroup, 
    "ol'": ol$prime, 
    ol: ol, 
    "object'": object$prime, 
    object: object, 
    "noscript'": noscript$prime, 
    noscript: noscript, 
    "nav'": nav$prime, 
    nav: nav, 
    "meter'": meter$prime, 
    meter: meter, 
    "meta'": meta$prime, 
    meta: meta, 
    "menuitem'": menuitem$prime, 
    menuitem: menuitem, 
    "menu'": menu$prime, 
    menu: menu, 
    "mark'": mark$prime, 
    mark: mark, 
    "map'": map$prime, 
    map: map, 
    "main'": main$prime, 
    main: main, 
    "link'": link$prime, 
    link: link, 
    "li'": li$prime, 
    li: li, 
    "legend'": legend$prime, 
    legend: legend, 
    "label'": label$prime, 
    label: label, 
    "keygen'": keygen$prime, 
    keygen: keygen, 
    "kbd'": kbd$prime, 
    kbd: kbd, 
    "ins'": ins$prime, 
    ins: ins, 
    "input'": input$prime, 
    input: input, 
    "img'": img$prime, 
    img: img, 
    "iframe'": iframe$prime, 
    iframe: iframe, 
    "i'": i$prime, 
    i: i, 
    "html'": html$prime, 
    html: html, 
    "hr'": hr$prime, 
    hr: hr, 
    "header'": header$prime, 
    header: header, 
    "head'": head$prime, 
    head: head, 
    "h6'": h6$prime, 
    h6: h6, 
    "h5'": h5$prime, 
    h5: h5, 
    "h4'": h4$prime, 
    h4: h4, 
    "h3'": h3$prime, 
    h3: h3, 
    "h2'": h2$prime, 
    h2: h2, 
    "h1'": h1$prime, 
    h1: h1, 
    "form'": form$prime, 
    form: form, 
    "footer'": footer$prime, 
    footer: footer, 
    "figure'": figure$prime, 
    figure: figure, 
    "figcaption'": figcaption$prime, 
    figcaption: figcaption, 
    "fieldset'": fieldset$prime, 
    fieldset: fieldset, 
    "embed'": embed$prime, 
    embed: embed, 
    "em'": em$prime, 
    em: em, 
    "dt'": dt$prime, 
    dt: dt, 
    "dl'": dl$prime, 
    dl: dl, 
    "div'": div$prime, 
    div: div, 
    "dialog'": dialog$prime, 
    dialog: dialog, 
    "dfn'": dfn$prime, 
    dfn: dfn, 
    "details'": details$prime, 
    details: details, 
    "del'": del$prime, 
    del: del, 
    "dd'": dd$prime, 
    dd: dd, 
    "datalist'": datalist$prime, 
    datalist: datalist, 
    "_data'": _data$prime, 
    _data: _data, 
    "colgroup'": colgroup$prime, 
    colgroup: colgroup, 
    "col'": col$prime, 
    col: col, 
    "code'": code$prime, 
    code: code, 
    "cite'": cite$prime, 
    cite: cite, 
    "caption'": caption$prime, 
    caption: caption, 
    "canvas'": canvas$prime, 
    canvas: canvas, 
    "button'": button$prime, 
    button: button, 
    "br'": br$prime, 
    br: br, 
    "body'": body$prime, 
    body: body, 
    "blockquote'": blockquote$prime, 
    blockquote: blockquote, 
    "big'": big$prime, 
    big: big, 
    "bdo'": bdo$prime, 
    bdo: bdo, 
    "bdi'": bdi$prime, 
    bdi: bdi, 
    "base'": base$prime, 
    base: base, 
    "b'": b$prime, 
    b: b, 
    "audio'": audio$prime, 
    audio: audio, 
    "aside'": aside$prime, 
    aside: aside, 
    "article'": article$prime, 
    article: article, 
    "area'": area$prime, 
    area: area, 
    "address'": address$prime, 
    address: address, 
    "abbr'": abbr$prime, 
    abbr: abbr, 
    "a'": a$prime, 
    a: a, 
    text: $foreign.text, 
    mkDOM: $foreign.mkDOM
};

},{"./foreign":11,"Prelude":8,"React":14,"React.DOM.Props":10}],13:[function(require,module,exports){
/* global exports */
"use strict";

// module React

exports.getProps = function(ctx) {
    return function() {
        return ctx.props;
    };
};

exports.getRefs = function(ctx) {
    return function() {
        return ctx.refs;
    };
};

exports.writeState = function(ctx) {
    return function(state) {
        return function() {
            ctx.replaceState({
                state: state
            });
            return function() {
                return state;
            }
        };
    };
};

exports.readState = function(ctx) {
    return function() {
        return ctx.state.state;
    };
};

exports.mkUI = function(ss) {
    var result = {};
    for (var s in ss) {
        if (ss.hasOwnProperty(s)) {
            result[s] = (function(impl) {
                return function() {
                    return impl(this)();
                }
            })(ss[s]);
        }
    }
    result.getInitialState = function() {
        return {
            state: ss.getInitialState(this)()
        };
    };
    return React.createClass(result);
};

exports.handle = function(f) {
    return function(e) {
        return f(e)();
    };
};

exports.renderToString = React.renderComponentToString;

exports.renderToBody = function(component) {
    return function() {
        return React.renderComponent(component, document.body);
    }
};

exports.renderToElementById = function(id) {
    return function(component) {
        return function() {
            return React.renderComponent(component, document.getElementById(id));
        }
    }
};

},{}],14:[function(require,module,exports){
// Generated by psc version 0.7.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var DOM = require("DOM");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Console = require("Control.Monad.Eff.Console");
var transformState = function (ctx) {
    return function (f) {
        return function __do() {
            var _3 = $foreign.readState(ctx)();
            return $foreign.writeState(ctx)(f(_3))();
        };
    };
};
var spec = function (st) {
    return function (render) {
        return {
            render: render, 
            getInitialState: function (_41) {
                return Prelude.pure(Control_Monad_Eff.applicativeEff)(st);
            }, 
            componentWillMount: function (_42) {
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
            }, 
            componentDidMount: function (_43) {
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
            }, 
            componentWillReceiveProps: function (_44) {
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
            }, 
            shouldComponentUpdate: function (_45) {
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
            }, 
            componentWillUpdate: function (_46) {
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
            }, 
            componentDidUpdate: function (_47) {
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
            }, 
            componentWillUnmount: function (_48) {
                return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
            }
        };
    };
};
module.exports = {
    transformState: transformState, 
    spec: spec, 
    renderToElementById: $foreign.renderToElementById, 
    renderToBody: $foreign.renderToBody, 
    renderToString: $foreign.renderToString, 
    handle: $foreign.handle, 
    mkUI: $foreign.mkUI, 
    writeState: $foreign.writeState, 
    readState: $foreign.readState, 
    getRefs: $foreign.getRefs, 
    getProps: $foreign.getProps
};

},{"./foreign":13,"Control.Monad.Eff":5,"Control.Monad.Eff.Console":3,"DOM":6,"Prelude":8}],15:[function(require,module,exports){
require('Chat.Main').main();

},{"Chat.Main":1}]},{},[15]);
