(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Chat_State = require("Chat.State");
var RequestMqtt = (function () {
    function RequestMqtt() {

    };
    RequestMqtt.value = new RequestMqtt();
    return RequestMqtt;
})();
var MqttConnect = (function () {
    function MqttConnect(value0) {
        this.value0 = value0;
    };
    MqttConnect.create = function (value0) {
        return new MqttConnect(value0);
    };
    return MqttConnect;
})();
var MqttSend = (function () {
    function MqttSend(value0) {
        this.value0 = value0;
    };
    MqttSend.create = function (value0) {
        return new MqttSend(value0);
    };
    return MqttSend;
})();
var ConnectionFormInput = (function () {
    function ConnectionFormInput(value0) {
        this.value0 = value0;
    };
    ConnectionFormInput.create = function (value0) {
        return new ConnectionFormInput(value0);
    };
    return ConnectionFormInput;
})();
var Connect = (function () {
    function Connect() {

    };
    Connect.value = new Connect();
    return Connect;
})();
var MqttInfoResponse = (function () {
    function MqttInfoResponse(value0) {
        this.value0 = value0;
    };
    MqttInfoResponse.create = function (value0) {
        return new MqttInfoResponse(value0);
    };
    return MqttInfoResponse;
})();
var ResponseError = (function () {
    function ResponseError() {

    };
    ResponseError.value = new ResponseError();
    return ResponseError;
})();
var Connected = (function () {
    function Connected() {

    };
    Connected.value = new Connected();
    return Connected;
})();
var PostArrived = (function () {
    function PostArrived(value0) {
        this.value0 = value0;
    };
    PostArrived.create = function (value0) {
        return new PostArrived(value0);
    };
    return PostArrived;
})();
var PostFormInput = (function () {
    function PostFormInput(value0) {
        this.value0 = value0;
    };
    PostFormInput.create = function (value0) {
        return new PostFormInput(value0);
    };
    return PostFormInput;
})();
var Post = (function () {
    function Post(value0) {
        this.value0 = value0;
    };
    Post.create = function (value0) {
        return new Post(value0);
    };
    return Post;
})();
module.exports = {
    RequestMqtt: RequestMqtt, 
    MqttConnect: MqttConnect, 
    MqttSend: MqttSend, 
    ConnectionFormInput: ConnectionFormInput, 
    Connect: Connect, 
    MqttInfoResponse: MqttInfoResponse, 
    ResponseError: ResponseError, 
    Connected: Connected, 
    PostArrived: PostArrived, 
    PostFormInput: PostFormInput, 
    Post: Post
};

},{"Chat.State":5}],2:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Thermite = require("Thermite");
var Chat_State = require("Chat.State");
var Chat_Render = require("Chat.Render");
var Thermite_Action = require("Thermite.Action");
var Chat_Update = require("Chat.Update");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var Chat_Action = require("Chat.Action");
var perform = function (_167) {
    return function (action) {
        return Thermite_Action.modifyState(Chat_Update.update(action));
    };
};
var spec = Thermite.simpleSpec(Chat_State.initialState)(perform)(Chat_Render.render);
var main = Thermite.render(Thermite.createClass(spec))({});
module.exports = {
    main: main
};

},{"Chat.Action":1,"Chat.Render":4,"Chat.State":5,"Chat.Update":6,"Control.Monad.Eff":12,"DOM":15,"Prelude":20,"Thermite":33,"Thermite.Action":21}],3:[function(require,module,exports){
/* global exports */
"use strict";

// module Chat.Render

exports.eventTargetValue = function(e) {
    return e.target.value;
};
exports.eventTimestamp = function(e) {
    return e.timeStamp;
};

},{}],4:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var $foreign = require("./foreign");
var Thermite_Html_Elements = require("Thermite.Html.Elements");
var Thermite_Html_Attributes = require("Thermite.Html.Attributes");
var Prelude = require("Prelude");
var Thermite_Html = require("Thermite.Html");
var Thermite_Html_Attributes_Unsafe = require("Thermite.Html.Attributes.Unsafe");
var Thermite_Events = require("Thermite.Events");
var Thermite = require("Thermite");
var Thermite_Types = require("Thermite.Types");
var Chat_State = require("Chat.State");
var Chat_Action = require("Chat.Action");
var userInput = function (ctx) {
    var nameInput = function (event) {
        return new Chat_Action.ConnectionFormInput(function (form) {
            var _211 = {};
            for (var _212 in form) {
                if (form.hasOwnProperty(_212)) {
                    _211[_212] = form[_212];
                };
            };
            _211.name = $foreign.eventTargetValue(event);
            return _211;
        });
    };
    return Thermite_Html_Elements.div(Thermite_Html_Attributes_Unsafe.style({
        display: "flex"
    }))([ Thermite_Html_Elements.div(Thermite_Html_Attributes_Unsafe.style({
        flex: 1, 
        padding: "0 5px"
    }))([ Thermite_Html_Elements.input(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("form-control"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.placeholder("Name"))(Thermite_Events.onInput(ctx)(nameInput))))([  ]) ]), Thermite_Html_Elements.div(Thermite_Html_Attributes_Unsafe.style({
        width: "100px", 
        padding: "0 10px", 
        textAlign: "center"
    }))([ Thermite_Html_Elements.button(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("btn btn-success"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes_Unsafe.style({
        display: "block", 
        width: "100%"
    }))(Thermite_Events.onClick(ctx)(function (_160) {
        return Chat_Action.Connect.value;
    }))))([ Thermite_Html.text("Connect") ]) ]) ]);
};
var showUser = function (name) {
    return Thermite_Html_Elements.div(Thermite_Html_Attributes_Unsafe.style({
        textAlign: "right"
    }))([ Thermite_Html.text("user: " + name) ]);
};
var posts = function (xs) {
    var toTr = function (post) {
        return Thermite_Html_Elements["tr'"]([ Thermite_Html_Elements["td'"]([ Thermite_Html.text(post.user) ]), Thermite_Html_Elements["td'"]([ Thermite_Html.text(post.content) ]), Thermite_Html_Elements["td'"]([ Thermite_Html.text(Prelude.show(Prelude.showInt)(post.time)) ]) ]);
    };
    return Thermite_Html_Elements.table(Thermite_Html_Attributes.className("table"))([ Thermite_Html_Elements["thead'"]([ Thermite_Html_Elements.th(Thermite_Html_Attributes_Unsafe.style({
        width: "200px"
    }))([ Thermite_Html.text("user") ]), Thermite_Html_Elements.th(Thermite_Html_Attributes_Unsafe.style({
        width: "auto"
    }))([ Thermite_Html.text("content") ]), Thermite_Html_Elements.th(Thermite_Html_Attributes_Unsafe.style({
        width: "200px"
    }))([ Thermite_Html.text("timestamp") ]) ]), Thermite_Html_Elements["tbody'"](Prelude.map(Prelude.functorArray)(toTr)(xs)) ]);
};
var postForm = function (ctx) {
    return function (s) {
        var postInput = function (event) {
            return new Chat_Action.PostFormInput(function (form) {
                var _214 = {};
                for (var _215 in form) {
                    if (form.hasOwnProperty(_215)) {
                        _214[_215] = form[_215];
                    };
                };
                _214.content = $foreign.eventTargetValue(event);
                return _214;
            });
        };
        var postClick = Prelude["<<<"](Prelude.semigroupoidFn)(Chat_Action.Post.create)($foreign.eventTimestamp);
        return Thermite_Html_Elements.div(Thermite_Html_Attributes_Unsafe.style({
            display: "flex"
        }))([ Thermite_Html_Elements.div(Thermite_Html_Attributes_Unsafe.style({
            flex: 1, 
            padding: "0 5px"
        }))([ Thermite_Html_Elements.input(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("form-control"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.placeholder("Content"))(Thermite_Events.onInput(ctx)(postInput))))([  ]) ]), Thermite_Html_Elements.div(Thermite_Html_Attributes_Unsafe.style({
            width: "100px", 
            padding: "0 10px", 
            textAlign: "center"
        }))([ Thermite_Html_Elements.button(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("btn btn-success"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes_Unsafe.style({
            display: "block", 
            width: "100%"
        }))(Thermite_Events.onClick(ctx)(postClick))))([ Thermite_Html.text("Post") ]) ]) ]);
    };
};
var navHeader = Thermite_Html_Elements.nav(Thermite_Html_Attributes.className("navbar navbar-default"))([ Thermite_Html_Elements.div(Thermite_Html_Attributes.className("container-fluid"))([ Thermite_Html_Elements.div(Thermite_Html_Attributes.className("navbar-header"))([ Thermite_Html_Elements.a(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("navbar-brand"))(Thermite_Html_Attributes.href("chat.html")))([ Thermite_Html.text("Chat Sample") ]) ]) ]) ]);
var content = function (ctx) {
    var children = function (_163) {
        if (_163 instanceof Chat_State.NotConnected) {
            return [ Thermite_Html_Elements.div(Thermite_Html_Attributes.className("row"))([ userInput(ctx) ]) ];
        };
        if (_163 instanceof Chat_State.Connecting) {
            return [ Thermite_Html_Elements.div(Thermite_Html_Attributes.className("row"))([ Thermite_Html.text("connecting...") ]) ];
        };
        if (_163 instanceof Chat_State.Connected) {
            return [ Thermite_Html_Elements.div(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("row"))(Thermite_Html_Attributes_Unsafe.style({
                padding: "0 20px 10px 0"
            })))([ showUser(_163.value0.name) ]), Thermite_Html_Elements.div(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("row"))(Thermite_Html_Attributes_Unsafe.style({
                padding: "10px"
            })))([ postForm(ctx)(_163.value0) ]), Thermite_Html_Elements.div(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("row"))(Thermite_Html_Attributes_Unsafe.style({
                padding: "10px"
            })))([ posts(_163.value0.posts) ]) ];
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\src\\Chat\\Render.purs line 38, column 5 - line 39, column 5: " + [ _163.constructor.name ]);
    };
    return Prelude["<<<"](Prelude.semigroupoidFn)(Thermite_Html_Elements.div(Thermite_Html_Attributes.className("container")))(children);
};
var render = function (ctx) {
    return function (s) {
        return function (_161) {
            return function (_162) {
                var html = Thermite_Html_Elements["div'"]([ navHeader, content(ctx)(s) ]);
                return html;
            };
        };
    };
};
module.exports = {
    render: render
};

},{"./foreign":3,"Chat.Action":1,"Chat.State":5,"Prelude":20,"Thermite":33,"Thermite.Events":22,"Thermite.Html":27,"Thermite.Html.Attributes":25,"Thermite.Html.Attributes.Unsafe":24,"Thermite.Html.Elements":26,"Thermite.Types":31}],5:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var NotConnected = (function () {
    function NotConnected(value0) {
        this.value0 = value0;
    };
    NotConnected.create = function (value0) {
        return new NotConnected(value0);
    };
    return NotConnected;
})();
var Connecting = (function () {
    function Connecting(value0) {
        this.value0 = value0;
    };
    Connecting.create = function (value0) {
        return new Connecting(value0);
    };
    return Connecting;
})();
var Connected = (function () {
    function Connected(value0) {
        this.value0 = value0;
    };
    Connected.create = function (value0) {
        return new Connected(value0);
    };
    return Connected;
})();
var initialState = new NotConnected({
    form: {
        name: ""
    }
});
module.exports = {
    NotConnected: NotConnected, 
    Connecting: Connecting, 
    Connected: Connected, 
    initialState: initialState
};

},{}],6:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Chat_Action = require("Chat.Action");
var Chat_State = require("Chat.State");
var update = function (_164) {
    return function (_165) {
        if (_164 instanceof Chat_Action.ConnectionFormInput && _165 instanceof Chat_State.NotConnected) {
            var next = new Chat_State.NotConnected((function () {
                var _214 = {};
                for (var _215 in _165.value0) {
                    if (_165.value0.hasOwnProperty(_215)) {
                        _214[_215] = _165.value0[_215];
                    };
                };
                _214.form = _164.value0(_165.value0.form);
                return _214;
            })());
            return next;
        };
        if (_164 instanceof Chat_Action.Connect && _165 instanceof Chat_State.NotConnected) {
            var next = function (_166) {
                if (_166 === "") {
                    return _165;
                };
                return new Chat_State.Connecting({
                    name: _166
                });
            };
            return next(_165.value0.form.name);
        };
        if (_164 instanceof Chat_Action.ResponseError && _165 instanceof Chat_State.Connecting) {
            var next = new Chat_State.NotConnected({
                form: {
                    name: ""
                }
            });
            return next;
        };
        if (_164 instanceof Chat_Action.MqttInfoResponse && _165 instanceof Chat_State.Connecting) {
            return _165;
        };
        if (_164 instanceof Chat_Action.Connected && _165 instanceof Chat_State.Connecting) {
            var next = new Chat_State.Connected({
                name: _165.value0.name, 
                form: {
                    content: ""
                }, 
                posts: [  ]
            });
            return next;
        };
        if (_164 instanceof Chat_Action.PostFormInput && _165 instanceof Chat_State.Connected) {
            var next = new Chat_State.Connected((function () {
                var _224 = {};
                for (var _225 in _165.value0) {
                    if (_165.value0.hasOwnProperty(_225)) {
                        _224[_225] = _165.value0[_225];
                    };
                };
                _224.form = _164.value0(_165.value0.form);
                return _224;
            })());
            return next;
        };
        if (_164 instanceof Chat_Action.Post && _165 instanceof Chat_State.Connected) {
            var next = new Chat_State.Connected((function () {
                var _228 = {};
                for (var _229 in _165.value0) {
                    if (_165.value0.hasOwnProperty(_229)) {
                        _228[_229] = _165.value0[_229];
                    };
                };
                _228.form = {
                    content: ""
                };
                return _228;
            })());
            return next;
        };
        if (_164 instanceof Chat_Action.PostArrived && _165 instanceof Chat_State.Connected) {
            var next = new Chat_State.Connected((function () {
                var _232 = {};
                for (var _233 in _165.value0) {
                    if (_165.value0.hasOwnProperty(_233)) {
                        _232[_233] = _165.value0[_233];
                    };
                };
                _232.posts = Prelude["++"](Prelude.semigroupArray)([ _164.value0 ])(_165.value0.posts);
                return _232;
            })());
            return next;
        };
        return _165;
    };
};
module.exports = {
    update: update
};

},{"Chat.Action":1,"Chat.State":5,"Prelude":20}],7:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Prelude.functorArray;
}, Prelude.append(Prelude.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
var $less$bar$greater = function (__dict_Alt_0) {
    return alt(__dict_Alt_0);
};
module.exports = {
    Alt: Alt, 
    "<|>": $less$bar$greater, 
    alt: alt, 
    altArray: altArray
};

},{"Prelude":20}],8:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Lazy = require("Control.Lazy");
var Control_Plus = require("Control.Plus");
var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var alternativeArray = new Alternative(function () {
    return Control_Plus.plusArray;
}, function () {
    return Prelude.applicativeArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"Control.Alt":7,"Control.Lazy":10,"Control.Plus":14,"Prelude":20}],9:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Extend = function (__superclass_Prelude$dotFunctor_0, extend) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function (__dict_Semigroup_0) {
    return new Extend(function () {
        return Prelude.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](__dict_Semigroup_0)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function (dict) {
    return dict.extend;
};
var $less$less$eq = function (__dict_Extend_1) {
    return extend(__dict_Extend_1);
};
var $eq$less$eq = function (__dict_Extend_2) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(__dict_Extend_2)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (__dict_Extend_3) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(__dict_Extend_3)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (__dict_Extend_4) {
    return function (w) {
        return function (f) {
            return $less$less$eq(__dict_Extend_4)(f)(w);
        };
    };
};
var duplicate = function (__dict_Extend_5) {
    return extend(__dict_Extend_5)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Extend: Extend, 
    duplicate: duplicate, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    "<<=": $less$less$eq, 
    extend: extend, 
    extendFn: extendFn
};

},{"Prelude":20}],10:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Lazy = function (defer) {
    this.defer = defer;
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (__dict_Lazy_0) {
    return function (f) {
        return defer(__dict_Lazy_0)(function (_48) {
            return f(fix(__dict_Lazy_0)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    fix: fix, 
    defer: defer
};

},{"Prelude":20}],11:[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],12:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    foreachE: $foreign.foreachE, 
    forE: $foreign.forE, 
    whileE: $foreign.whileE, 
    untilE: $foreign.untilE, 
    runPure: $foreign.runPure
};

},{"./foreign":11,"Prelude":20}],13:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Prelude.monadArray;
});
var guard = function (__dict_MonadPlus_0) {
    return function (_115) {
        if (_115) {
            return Prelude["return"]((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
        };
        if (!_115) {
            return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-control\\src\\Control\\MonadPlus.purs line 35, column 1 - line 36, column 1: " + [ _115.constructor.name ]);
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard, 
    monadPlusArray: monadPlusArray
};

},{"Control.Alternative":8,"Control.Plus":14,"Prelude":20}],14:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"Control.Alt":7,"Prelude":20}],15:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
module.exports = {};

},{}],16:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (__dict_Functor_0) {
    return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["const"])(Prelude.map(__dict_Functor_0));
};
var invariantArray = new Invariant(imapF(Prelude.functorArray));
var invariantFn = new Invariant(imapF(Prelude.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imapF: imapF, 
    imap: imap, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"Prelude":20}],17:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Extend = require("Control.Extend");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Monoid = require("Data.Monoid");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (__dict_Show_0) {
    return new Prelude.Show(function (_128) {
        if (_128 instanceof Just) {
            return "Just (" + (Prelude.show(__dict_Show_0)(_128.value0) + ")");
        };
        if (_128 instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-maybe\\src\\Data\\Maybe.purs line 264, column 1 - line 266, column 19: " + [ _128.constructor.name ]);
    });
};
var semigroupMaybe = function (__dict_Semigroup_2) {
    return new Prelude.Semigroup(function (_122) {
        return function (_123) {
            if (_122 instanceof Nothing) {
                return _123;
            };
            if (_123 instanceof Nothing) {
                return _122;
            };
            if (_122 instanceof Just && _123 instanceof Just) {
                return new Just(Prelude["<>"](__dict_Semigroup_2)(_122.value0)(_123.value0));
            };
            throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-maybe\\src\\Data\\Maybe.purs line 206, column 1 - line 211, column 1: " + [ _122.constructor.name, _123.constructor.name ]);
        };
    });
};
var monoidMaybe = function (__dict_Semigroup_6) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(__dict_Semigroup_6);
    }, Nothing.value);
};
var maybe = function (b) {
    return function (f) {
        return function (_116) {
            if (_116 instanceof Nothing) {
                return b;
            };
            if (_116 instanceof Just) {
                return f(_116.value0);
            };
            throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-maybe\\src\\Data\\Maybe.purs line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _116.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (fn) {
    return function (_117) {
        if (_117 instanceof Just) {
            return new Just(fn(_117.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryFn));
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (f) {
    return function (_121) {
        if (_121 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(f(_121));
    };
});
var eqMaybe = function (__dict_Eq_8) {
    return new Prelude.Eq(function (_124) {
        return function (_125) {
            if (_124 instanceof Nothing && _125 instanceof Nothing) {
                return true;
            };
            if (_124 instanceof Just && _125 instanceof Just) {
                return Prelude["=="](__dict_Eq_8)(_124.value0)(_125.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (__dict_Ord_4) {
    return new Prelude.Ord(function () {
        return eqMaybe(__dict_Ord_4["__superclass_Prelude.Eq_0"]());
    }, function (_126) {
        return function (_127) {
            if (_126 instanceof Just && _127 instanceof Just) {
                return Prelude.compare(__dict_Ord_4)(_126.value0)(_127.value0);
            };
            if (_126 instanceof Nothing && _127 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (_126 instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (_127 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-maybe\\src\\Data\\Maybe.purs line 244, column 1 - line 250, column 1: " + [ _126.constructor.name, _127.constructor.name ]);
        };
    });
};
var boundedMaybe = function (__dict_Bounded_11) {
    return new Prelude.Bounded(Nothing.value, new Just(Prelude.top(__dict_Bounded_11)));
};
var boundedOrdMaybe = function (__dict_BoundedOrd_10) {
    return new Prelude.BoundedOrd(function () {
        return boundedMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordMaybe(__dict_BoundedOrd_10["__superclass_Prelude.Ord_1"]());
    });
};
var applyMaybe = new Prelude.Apply(function () {
    return functorMaybe;
}, function (_118) {
    return function (x) {
        if (_118 instanceof Just) {
            return Prelude["<$>"](functorMaybe)(_118.value0)(x);
        };
        if (_118 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-maybe\\src\\Data\\Maybe.purs line 96, column 1 - line 120, column 1: " + [ _118.constructor.name, x.constructor.name ]);
    };
});
var bindMaybe = new Prelude.Bind(function () {
    return applyMaybe;
}, function (_120) {
    return function (k) {
        if (_120 instanceof Just) {
            return k(_120.value0);
        };
        if (_120 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-maybe\\src\\Data\\Maybe.purs line 155, column 1 - line 174, column 1: " + [ _120.constructor.name, k.constructor.name ]);
    };
});
var booleanAlgebraMaybe = function (__dict_BooleanAlgebra_12) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedMaybe(__dict_BooleanAlgebra_12["__superclass_Prelude.Bounded_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.conj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.disj(__dict_BooleanAlgebra_12))(x))(y);
        };
    }, Prelude.map(functorMaybe)(Prelude.not(__dict_BooleanAlgebra_12)));
};
var semiringMaybe = function (__dict_Semiring_1) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.add(__dict_Semiring_1))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mul(__dict_Semiring_1))(x))(y);
        };
    }, new Just(Prelude.one(__dict_Semiring_1)), new Just(Prelude.zero(__dict_Semiring_1)));
};
var moduloSemiringMaybe = function (__dict_ModuloSemiring_7) {
    return new Prelude.ModuloSemiring(function () {
        return semiringMaybe(__dict_ModuloSemiring_7["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.div(__dict_ModuloSemiring_7))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mod(__dict_ModuloSemiring_7))(x))(y);
        };
    });
};
var ringMaybe = function (__dict_Ring_3) {
    return new Prelude.Ring(function () {
        return semiringMaybe(__dict_Ring_3["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.sub(__dict_Ring_3))(x))(y);
        };
    });
};
var divisionRingMaybe = function (__dict_DivisionRing_9) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringMaybe(__dict_DivisionRing_9["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringMaybe(__dict_DivisionRing_9["__superclass_Prelude.Ring_0"]());
    });
};
var numMaybe = function (__dict_Num_5) {
    return new Prelude.Num(function () {
        return divisionRingMaybe(__dict_Num_5["__superclass_Prelude.DivisionRing_0"]());
    });
};
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (_119) {
    return function (r) {
        if (_119 instanceof Nothing) {
            return r;
        };
        return _119;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    isNothing: isNothing, 
    isJust: isJust, 
    fromMaybe: fromMaybe, 
    maybe: maybe, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    semiringMaybe: semiringMaybe, 
    moduloSemiringMaybe: moduloSemiringMaybe, 
    ringMaybe: ringMaybe, 
    divisionRingMaybe: divisionRingMaybe, 
    numMaybe: numMaybe, 
    eqMaybe: eqMaybe, 
    ordMaybe: ordMaybe, 
    boundedMaybe: boundedMaybe, 
    boundedOrdMaybe: boundedOrdMaybe, 
    booleanAlgebraMaybe: booleanAlgebraMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":7,"Control.Alternative":8,"Control.Extend":9,"Control.MonadPlus":13,"Control.Plus":14,"Data.Functor.Invariant":16,"Data.Monoid":18,"Prelude":20}],18:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Prelude.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (__dict_Monoid_0) {
    return new Monoid(function () {
        return Prelude.semigroupFn(__dict_Monoid_0["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(__dict_Monoid_0)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidUnit: monoidUnit, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"Prelude":20}],19:[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Lattice --------------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

//- ComplementedLattice --------------------------------------------------------

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  return c === "'" ? "'\\''" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  return JSON.stringify(s);
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],20:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var $foreign = require("./foreign");
var Unit = function (x) {
    return x;
};
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function (map) {
    this.map = map;
};
var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function (__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function (append) {
    this.append = append;
};
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function (__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function (eq) {
    this.eq = eq;
};
var Ord = function (__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function (bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function (show) {
    this.show = show;
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zero = function (dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function (dict) {
    return dict.top;
};
var sub = function (dict) {
    return dict.sub;
};
var $minus = function (__dict_Ring_0) {
    return sub(__dict_Ring_0);
};
var showUnit = new Show(function (_40) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (_41) {
    if (_41 instanceof LT) {
        return "LT";
    };
    if (_41 instanceof GT) {
        return "GT";
    };
    if (_41 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-prelude\\src\\Prelude.purs line 850, column 1 - line 855, column 1: " + [ _41.constructor.name ]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (_39) {
    if (_39) {
        return "true";
    };
    if (!_39) {
        return "false";
    };
    throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-prelude\\src\\Prelude.purs line 828, column 1 - line 832, column 1: " + [ _39.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_1) {
    return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
};
var semiringUnit = new Semiring(function (_12) {
    return function (_13) {
        return unit;
    };
}, function (_14) {
    return function (_15) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_9) {
    return function (_10) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (_11) {
    return function (y) {
        if (_11 instanceof LT) {
            return LT.value;
        };
        if (_11 instanceof GT) {
            return GT.value;
        };
        if (_11 instanceof EQ) {
            return y;
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-prelude\\src\\Prelude.purs line 412, column 1 - line 417, column 1: " + [ _11.constructor.name, y.constructor.name ]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (_16) {
    return function (_17) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Applicative_2) {
    return pure(__dict_Applicative_2);
};
var otherwise = true;
var one = function (dict) {
    return dict.one;
};
var not = function (dict) {
    return dict.not;
};
var negate = function (__dict_Ring_3) {
    return function (a) {
        return $minus(__dict_Ring_3)(zero(__dict_Ring_3["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function (dict) {
    return dict.mul;
};
var $times = function (__dict_Semiring_4) {
    return mul(__dict_Semiring_4);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (_20) {
    return function (_21) {
        return unit;
    };
}, function (_22) {
    return function (_23) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (_18) {
    return function (_19) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function (dict) {
    return dict.mod;
};
var map = function (dict) {
    return dict.map;
};
var $less$dollar$greater = function (__dict_Functor_5) {
    return map(__dict_Functor_5);
};
var $less$hash$greater = function (__dict_Functor_6) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_6)(f)(fa);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_24) {
    return function (_25) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_28) {
    return function (_29) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (_26) {
    return function (_27) {
        if (_26 instanceof LT && _27 instanceof LT) {
            return true;
        };
        if (_26 instanceof GT && _27 instanceof GT) {
            return true;
        };
        if (_26 instanceof EQ && _27 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (_30) {
    return function (_31) {
        if (_30 instanceof LT && _31 instanceof LT) {
            return EQ.value;
        };
        if (_30 instanceof EQ && _31 instanceof EQ) {
            return EQ.value;
        };
        if (_30 instanceof GT && _31 instanceof GT) {
            return EQ.value;
        };
        if (_30 instanceof LT) {
            return LT.value;
        };
        if (_30 instanceof EQ && _31 instanceof LT) {
            return GT.value;
        };
        if (_30 instanceof EQ && _31 instanceof GT) {
            return LT.value;
        };
        if (_30 instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-prelude\\src\\Prelude.purs line 667, column 1 - line 676, column 1: " + [ _30.constructor.name, _31.constructor.name ]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function (dict) {
    return dict.eq;
};
var $eq$eq = function (__dict_Eq_7) {
    return eq(__dict_Eq_7);
};
var eqArray = function (__dict_Eq_8) {
    return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function (dict) {
    return dict.div;
};
var $div = function (__dict_ModuloSemiring_10) {
    return div(__dict_ModuloSemiring_10);
};
var disj = function (dict) {
    return dict.disj;
};
var $bar$bar = function (__dict_BooleanAlgebra_11) {
    return disj(__dict_BooleanAlgebra_11);
};
var $$const = function (a) {
    return function (_7) {
        return a;
    };
};
var $$void = function (__dict_Functor_12) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
    };
};
var conj = function (dict) {
    return dict.conj;
};
var $amp$amp = function (__dict_BooleanAlgebra_13) {
    return conj(__dict_BooleanAlgebra_13);
};
var compose = function (dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function (__dict_Semigroupoid_14) {
    return compose(__dict_Semigroupoid_14);
};
var $greater$greater$greater = function (__dict_Semigroupoid_15) {
    return flip(compose(__dict_Semigroupoid_15));
};
var compare = function (dict) {
    return dict.compare;
};
var ordArray = function (__dict_Ord_16) {
    return new Ord(function () {
        return eqArray(__dict_Ord_16["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var _176 = compare(__dict_Ord_16)(x)(y);
                    if (_176 instanceof EQ) {
                        return 0;
                    };
                    if (_176 instanceof LT) {
                        return 1;
                    };
                    if (_176 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-prelude\\src\\Prelude.purs line 659, column 1 - line 665, column 1: " + [ _176.constructor.name ]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function (__dict_Ord_17) {
    return function (a1) {
        return function (a2) {
            var _177 = compare(__dict_Ord_17)(a1)(a2);
            if (_177 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_18) {
    return function (a1) {
        return function (a2) {
            var _178 = compare(__dict_Ord_18)(a1)(a2);
            if (_178 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_19) {
    return function (a1) {
        return function (a2) {
            var _179 = compare(__dict_Ord_19)(a1)(a2);
            if (_179 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_20) {
    return function (a1) {
        return function (a2) {
            var _180 = compare(__dict_Ord_20)(a1)(a2);
            if (_180 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded(negate(ringInt)(2147483648), 2147483647);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function (dict) {
    return dict.bottom;
};
var boundedFn = function (__dict_Bounded_21) {
    return new Bounded(function (_33) {
        return bottom(__dict_Bounded_21);
    }, function (_32) {
        return top(__dict_Bounded_21);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (_34) {
    return function (_35) {
        return unit;
    };
}, function (_36) {
    return function (_37) {
        return unit;
    };
}, function (_38) {
    return unit;
});
var booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {
    return new BooleanAlgebra(function () {
        return boundedFn(__dict_BooleanAlgebra_22["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(__dict_BooleanAlgebra_22)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function (__dict_Eq_9) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));
        };
    };
};
var bind = function (dict) {
    return dict.bind;
};
var liftM1 = function (__dict_Monad_23) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_0));
            });
        };
    };
};
var $greater$greater$eq = function (__dict_Bind_24) {
    return bind(__dict_Bind_24);
};
var asTypeOf = function (x) {
    return function (_8) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function (dict) {
    return dict.apply;
};
var $less$times$greater = function (__dict_Apply_25) {
    return apply(__dict_Apply_25);
};
var liftA1 = function (__dict_Applicative_26) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function (dict) {
    return dict.append;
};
var $plus$plus = function (__dict_Semigroup_27) {
    return append(__dict_Semigroup_27);
};
var $less$greater = function (__dict_Semigroup_28) {
    return append(__dict_Semigroup_28);
};
var semigroupFn = function (__dict_Semigroup_29) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_29)(f(x))(g(x));
            };
        };
    });
};
var ap = function (__dict_Monad_30) {
    return function (f) {
        return function (a) {
            return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                    return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [ x ];
});
var add = function (dict) {
    return dict.add;
};
var $plus = function (__dict_Semiring_31) {
    return add(__dict_Semiring_31);
};
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    Show: Show, 
    BooleanAlgebra: BooleanAlgebra, 
    BoundedOrd: BoundedOrd, 
    Bounded: Bounded, 
    Ord: Ord, 
    Eq: Eq, 
    DivisionRing: DivisionRing, 
    Num: Num, 
    Ring: Ring, 
    ModuloSemiring: ModuloSemiring, 
    Semiring: Semiring, 
    Semigroup: Semigroup, 
    Monad: Monad, 
    Bind: Bind, 
    Applicative: Applicative, 
    Apply: Apply, 
    Functor: Functor, 
    Category: Category, 
    Semigroupoid: Semigroupoid, 
    show: show, 
    "||": $bar$bar, 
    "&&": $amp$amp, 
    not: not, 
    disj: disj, 
    conj: conj, 
    bottom: bottom, 
    top: top, 
    ">=": $greater$eq, 
    "<=": $less$eq, 
    ">": $greater, 
    "<": $less, 
    compare: compare, 
    "/=": $div$eq, 
    "==": $eq$eq, 
    eq: eq, 
    "-": $minus, 
    negate: negate, 
    sub: sub, 
    "/": $div, 
    mod: mod, 
    div: div, 
    "*": $times, 
    "+": $plus, 
    one: one, 
    mul: mul, 
    zero: zero, 
    add: add, 
    "++": $plus$plus, 
    "<>": $less$greater, 
    append: append, 
    ap: ap, 
    liftM1: liftM1, 
    "return": $$return, 
    ">>=": $greater$greater$eq, 
    bind: bind, 
    liftA1: liftA1, 
    pure: pure, 
    "<*>": $less$times$greater, 
    apply: apply, 
    "void": $$void, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    map: map, 
    id: id, 
    ">>>": $greater$greater$greater, 
    "<<<": $less$less$less, 
    compose: compose, 
    otherwise: otherwise, 
    asTypeOf: asTypeOf, 
    "const": $$const, 
    flip: flip, 
    "#": $hash, 
    "$": $dollar, 
    unit: unit, 
    semigroupoidFn: semigroupoidFn, 
    categoryFn: categoryFn, 
    functorFn: functorFn, 
    functorArray: functorArray, 
    applyFn: applyFn, 
    applyArray: applyArray, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    monadFn: monadFn, 
    monadArray: monadArray, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupFn: semigroupFn, 
    semigroupOrdering: semigroupOrdering, 
    semigroupArray: semigroupArray, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    moduloSemiringInt: moduloSemiringInt, 
    moduloSemiringNumber: moduloSemiringNumber, 
    moduloSemiringUnit: moduloSemiringUnit, 
    divisionRingNumber: divisionRingNumber, 
    divisionRingUnit: divisionRingUnit, 
    numNumber: numNumber, 
    numUnit: numUnit, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqArray: eqArray, 
    eqOrdering: eqOrdering, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    boundedBoolean: boundedBoolean, 
    boundedUnit: boundedUnit, 
    boundedOrdering: boundedOrdering, 
    boundedInt: boundedInt, 
    boundedFn: boundedFn, 
    boundedOrdBoolean: boundedOrdBoolean, 
    boundedOrdUnit: boundedOrdUnit, 
    boundedOrdOrdering: boundedOrdOrdering, 
    boundedOrdInt: boundedOrdInt, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showUnit: showUnit, 
    showArray: showArray, 
    showOrdering: showOrdering
};

},{"./foreign":19}],21:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Prelude = require("Prelude");
var Thermite_Internal = require("Thermite.Internal");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Thermite_Types = require("Thermite.Types");
var GetState = (function () {
    function GetState(value0) {
        this.value0 = value0;
    };
    GetState.create = function (value0) {
        return new GetState(value0);
    };
    return GetState;
})();
var SetState = (function () {
    function SetState(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetState.create = function (value0) {
        return function (value1) {
            return new SetState(value0, value1);
        };
    };
    return SetState;
})();
var Wait = (function () {
    function Wait(value0) {
        this.value0 = value0;
    };
    Wait.create = function (value0) {
        return new Wait(value0);
    };
    return Wait;
})();
var Pure = (function () {
    function Pure(value0) {
        this.value0 = value0;
    };
    Pure.create = function (value0) {
        return new Pure(value0);
    };
    return Pure;
})();
var Impure = (function () {
    function Impure(value0) {
        this.value0 = value0;
    };
    Impure.create = function (value0) {
        return new Impure(value0);
    };
    return Impure;
})();
var setState = function (s) {
    return Impure.create(new SetState(s, new Pure(Prelude.unit)));
};
var runAction = function (ctx) {
    var go = function (_155) {
        if (_155 instanceof Pure) {
            return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
        };
        if (_155 instanceof Impure && _155.value0 instanceof GetState) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                var _3 = Thermite_Internal.getStateImpl(ctx)();
                return go(_155.value0.value0(_3))();
            });
        };
        if (_155 instanceof Impure && _155.value0 instanceof SetState) {
            return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                Thermite_Internal.setStateImpl(ctx)(_155.value0.value0)();
                return go(_155.value0.value1)();
            });
        };
        if (_155 instanceof Impure && _155.value0 instanceof Wait) {
            return _155.value0.value0(go);
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-thermite\\src\\Thermite\\Action.purs line 40, column 1 - line 41, column 1: " + [ _155.constructor.name ]);
    };
    return go;
};
var getState = Impure.create(new GetState(Pure.create));
var functorActionF = new Prelude.Functor(function (f) {
    return function (_154) {
        if (_154 instanceof GetState) {
            return new GetState(Prelude["<<<"](Prelude.semigroupoidFn)(f)(_154.value0));
        };
        if (_154 instanceof SetState) {
            return new SetState(_154.value0, f(_154.value1));
        };
        if (_154 instanceof Wait) {
            return new Wait(function (k) {
                return _154.value0(Prelude["<<<"](Prelude.semigroupoidFn)(k)(f));
            });
        };
        throw new Error("Failed pattern match at C:\\Users\\rf\\Downloads\\purescript-sample\\psc\\bower_components\\purescript-thermite\\src\\Thermite\\Action.purs line 27, column 1 - line 37, column 1: " + [ f.constructor.name, _154.constructor.name ]);
    };
});
var functorAction = new Prelude.Functor(function (f) {
    return function (_156) {
        if (_156 instanceof Pure) {
            return new Pure(f(_156.value0));
        };
        if (_156 instanceof Impure) {
            return new Impure(Prelude["<$>"](functorActionF)(Prelude["<$>"](functorAction)(f))(_156.value0));
        };
        throw new Error("Failed pattern match: " + [ f.constructor.name, _156.constructor.name ]);
    };
});
var async = function (c) {
    return Impure.create(new Wait(function (k) {
        return c(Prelude["<<<"](Prelude.semigroupoidFn)(k)(Pure.create));
    }));
};
var sync = function (e) {
    return async(Prelude[">>="](Control_Monad_Eff.bindEff)(e));
};
var monadAction = new Prelude.Monad(function () {
    return applicativeAction;
}, function () {
    return bindAction;
});
var bindAction = new Prelude.Bind(function () {
    return applyAction;
}, function (_157) {
    return function (f) {
        if (_157 instanceof Pure) {
            return f(_157.value0);
        };
        if (_157 instanceof Impure) {
            return Impure.create(Prelude["<#>"](functorActionF)(_157.value0)(function (a) {
                return Prelude[">>="](bindAction)(a)(f);
            }));
        };
        throw new Error("Failed pattern match: " + [ _157.constructor.name, f.constructor.name ]);
    };
});
var applyAction = new Prelude.Apply(function () {
    return functorAction;
}, Prelude.ap(monadAction));
var applicativeAction = new Prelude.Applicative(function () {
    return applyAction;
}, Pure.create);
var asyncSetState = function (c) {
    return Prelude.bind(bindAction)(async(c))(function (_5) {
        return setState(_5);
    });
};
var modifyState = function (f) {
    return Prelude.bind(bindAction)(getState)(function (_4) {
        return setState(f(_4));
    });
};
module.exports = {
    asyncSetState: asyncSetState, 
    async: async, 
    sync: sync, 
    modifyState: modifyState, 
    setState: setState, 
    getState: getState, 
    runAction: runAction, 
    functorAction: functorAction, 
    applyAction: applyAction, 
    applicativeAction: applicativeAction, 
    bindAction: bindAction, 
    monadAction: monadAction
};

},{"Control.Monad.Eff":12,"Prelude":20,"Thermite.Internal":29,"Thermite.Types":31}],22:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Thermite_Internal = require("Thermite.Internal");
var Prelude = require("Prelude");
var Thermite_Types = require("Thermite.Types");
var onWheel = Thermite_Internal.event("onWheel");
var onTouchStart = Thermite_Internal.event("onTouchStart");
var onTouchMove = Thermite_Internal.event("onTouchMove");
var onTouchEnd = Thermite_Internal.event("onTouchEnd");
var onTouchCancel = Thermite_Internal.event("onTouchCancel");
var onSubmit = Thermite_Internal.event("onSubmit");
var onScroll = Thermite_Internal.event("onScroll");
var onPaste = Thermite_Internal.event("onPaste");
var onMouseUp = Thermite_Internal.event("onMouseUp");
var onMouseOver = Thermite_Internal.event("onMouseOver");
var onMouseOut = Thermite_Internal.event("onMouseOut");
var onMouseMove = Thermite_Internal.event("onMouseMove");
var onMouseLeave = Thermite_Internal.event("onMouseLeave");
var onMouseEnter = Thermite_Internal.event("onMouseEnter");
var onMouseDown = Thermite_Internal.event("onMouseDown");
var onKeyUp = Thermite_Internal.event("onKeyUp");
var onKeyPress = Thermite_Internal.event("onKeyPress");
var onKeyDown = Thermite_Internal.event("onKeyDown");
var onInput = Thermite_Internal.event("onInput");
var onFocus = Thermite_Internal.event("onFocus");
var onDrop = Thermite_Internal.event("onDrop");
var onDragStart = Thermite_Internal.event("onDragStart");
var onDragOver = Thermite_Internal.event("onDragOver");
var onDragLeave = Thermite_Internal.event("onDragLeave");
var onDragExit = Thermite_Internal.event("onDragExit");
var onDragEnter = Thermite_Internal.event("onDragEnter");
var onDragEnd = Thermite_Internal.event("onDragEnd");
var onDrag = Thermite_Internal.event("onDrag");
var onDoubleClick = Thermite_Internal.event("onDoubleClick");
var onCut = Thermite_Internal.event("onCut");
var onCopy = Thermite_Internal.event("onCopy");
var onClick = Thermite_Internal.event("onClick");
var onChange = Thermite_Internal.event("onChange");
var onBlur = Thermite_Internal.event("onBlur");
module.exports = {
    onWheel: onWheel, 
    onScroll: onScroll, 
    onTouchStart: onTouchStart, 
    onTouchMove: onTouchMove, 
    onTouchEnd: onTouchEnd, 
    onTouchCancel: onTouchCancel, 
    onMouseUp: onMouseUp, 
    onMouseOver: onMouseOver, 
    onMouseOut: onMouseOut, 
    onMouseMove: onMouseMove, 
    onMouseLeave: onMouseLeave, 
    onMouseEnter: onMouseEnter, 
    onMouseDown: onMouseDown, 
    onDrop: onDrop, 
    onDragStart: onDragStart, 
    onDragOver: onDragOver, 
    onDragLeave: onDragLeave, 
    onDragExit: onDragExit, 
    onDragEnter: onDragEnter, 
    onDragEnd: onDragEnd, 
    onDrag: onDrag, 
    onDoubleClick: onDoubleClick, 
    onClick: onClick, 
    onSubmit: onSubmit, 
    onInput: onInput, 
    onChange: onChange, 
    onBlur: onBlur, 
    onFocus: onFocus, 
    onKeyUp: onKeyUp, 
    onKeyPress: onKeyPress, 
    onKeyDown: onKeyDown, 
    onPaste: onPaste, 
    onCut: onCut, 
    onCopy: onCopy
};

},{"Prelude":20,"Thermite.Internal":29,"Thermite.Types":31}],23:[function(require,module,exports){
/* global exports */
"use strict";

// module Thermite.Html.Attributes.Unsafe

exports.styleUnsafe = function(a) {
  return a;
};
},{}],24:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var $foreign = require("./foreign");
var Thermite_Internal = require("Thermite.Internal");
var Prelude = require("Prelude");
var Thermite_Types = require("Thermite.Types");
var style = Prelude["<<<"](Prelude.semigroupoidFn)(Thermite_Internal.unsafeAttribute("style"))($foreign.styleUnsafe);
var innerHTML = function (s) {
    return Thermite_Internal.unsafeAttribute("dangerouslySetInnerHTML")({
        __html: s
    });
};
module.exports = {
    style: style, 
    innerHTML: innerHTML, 
    styleUnsafe: $foreign.styleUnsafe
};

},{"./foreign":23,"Prelude":20,"Thermite.Internal":29,"Thermite.Types":31}],25:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Thermite_Internal = require("Thermite.Internal");
var Prelude = require("Prelude");
var Thermite_Types = require("Thermite.Types");
var wmode = Thermite_Internal.unsafeAttribute("wmode");
var width = Thermite_Internal.unsafeAttribute("width");
var value = Thermite_Internal.unsafeAttribute("value");
var useMap = Thermite_Internal.unsafeAttribute("useMap");
var title = Thermite_Internal.unsafeAttribute("title");
var target = Thermite_Internal.unsafeAttribute("target");
var tabIndex = Thermite_Internal.unsafeAttribute("tabIndex");
var step = Thermite_Internal.unsafeAttribute("step");
var start = Thermite_Internal.unsafeAttribute("start");
var srcSet = Thermite_Internal.unsafeAttribute("srcSet");
var srcDoc = Thermite_Internal.unsafeAttribute("srcDoc");
var src = Thermite_Internal.unsafeAttribute("src");
var spellCheck = Thermite_Internal.unsafeAttribute("spellCheck");
var span = Thermite_Internal.unsafeAttribute("span");
var sizes = Thermite_Internal.unsafeAttribute("sizes");
var size = Thermite_Internal.unsafeAttribute("size");
var shape = Thermite_Internal.unsafeAttribute("shape");
var selected = Thermite_Internal.unsafeAttribute("selected");
var seamless = Thermite_Internal.unsafeAttribute("seamless");
var scrolling = Thermite_Internal.unsafeAttribute("scrolling");
var scope = Thermite_Internal.unsafeAttribute("scope");
var sandbox = Thermite_Internal.unsafeAttribute("sandbox");
var rows = Thermite_Internal.unsafeAttribute("rows");
var rowSpan = Thermite_Internal.unsafeAttribute("rowSpan");
var role = Thermite_Internal.unsafeAttribute("role");
var required = Thermite_Internal.unsafeAttribute("required");
var rel = Thermite_Internal.unsafeAttribute("rel");
var readOnly = Thermite_Internal.unsafeAttribute("readOnly");
var radioGroup = Thermite_Internal.unsafeAttribute("radioGroup");
var preload = Thermite_Internal.unsafeAttribute("preload");
var poster = Thermite_Internal.unsafeAttribute("poster");
var placeholder = Thermite_Internal.unsafeAttribute("placeholder");
var pattern = Thermite_Internal.unsafeAttribute("pattern");
var open = Thermite_Internal.unsafeAttribute("open");
var noValidate = Thermite_Internal.unsafeAttribute("noValidate");
var name = Thermite_Internal.unsafeAttribute("name");
var muted = Thermite_Internal.unsafeAttribute("muted");
var multiple = Thermite_Internal.unsafeAttribute("multiple");
var min = Thermite_Internal.unsafeAttribute("min");
var method = Thermite_Internal.unsafeAttribute("method");
var mediaGroup = Thermite_Internal.unsafeAttribute("mediaGroup");
var media = Thermite_Internal.unsafeAttribute("media");
var maxLength = Thermite_Internal.unsafeAttribute("maxLength");
var max = Thermite_Internal.unsafeAttribute("max");
var marginWidth = Thermite_Internal.unsafeAttribute("marginWidth");
var marginHeight = Thermite_Internal.unsafeAttribute("marginHeight");
var manifest = Thermite_Internal.unsafeAttribute("manifest");
var loop = Thermite_Internal.unsafeAttribute("loop");
var list = Thermite_Internal.unsafeAttribute("list");
var lang = Thermite_Internal.unsafeAttribute("lang");
var label = Thermite_Internal.unsafeAttribute("label");
var key = Thermite_Internal.unsafeAttribute("key");
var icon = Thermite_Internal.unsafeAttribute("icon");
var httpEquiv = Thermite_Internal.unsafeAttribute("httpEquiv");
var htmlFor = Thermite_Internal.unsafeAttribute("htmlFor");
var hrefLang = Thermite_Internal.unsafeAttribute("hrefLang");
var href = Thermite_Internal.unsafeAttribute("href");
var hidden = Thermite_Internal.unsafeAttribute("hidden");
var height = Thermite_Internal.unsafeAttribute("height");
var frameBorder = Thermite_Internal.unsafeAttribute("frameBorder");
var formTarget = Thermite_Internal.unsafeAttribute("formTarget");
var formNoValidate = Thermite_Internal.unsafeAttribute("formNoValidate");
var formMethod = Thermite_Internal.unsafeAttribute("formMethod");
var formEncType = Thermite_Internal.unsafeAttribute("formEncType");
var formAction = Thermite_Internal.unsafeAttribute("formAction");
var form = Thermite_Internal.unsafeAttribute("form");
var encType = Thermite_Internal.unsafeAttribute("encType");
var draggable = Thermite_Internal.unsafeAttribute("draggable");
var download = Thermite_Internal.unsafeAttribute("download");
var disabled = Thermite_Internal.unsafeAttribute("disabled");
var dir = Thermite_Internal.unsafeAttribute("dir");
var defer = Thermite_Internal.unsafeAttribute("defer");
var dateTime = Thermite_Internal.unsafeAttribute("dateTime");
var crossOrigin = Thermite_Internal.unsafeAttribute("crossOrigin");
var coords = Thermite_Internal.unsafeAttribute("coords");
var controls = Thermite_Internal.unsafeAttribute("controls");
var contextMenu = Thermite_Internal.unsafeAttribute("contextMenu");
var contentEditable = Thermite_Internal.unsafeAttribute("contentEditable");
var content = Thermite_Internal.unsafeAttribute("content");
var cols = Thermite_Internal.unsafeAttribute("cols");
var colSpan = Thermite_Internal.unsafeAttribute("colSpan");
var className = Thermite_Internal.unsafeAttribute("className");
var classID = Thermite_Internal.unsafeAttribute("classID");
var checked = Thermite_Internal.unsafeAttribute("checked");
var charSet = Thermite_Internal.unsafeAttribute("charSet");
var cellSpacing = Thermite_Internal.unsafeAttribute("cellSpacing");
var cellPadding = Thermite_Internal.unsafeAttribute("cellPadding");
var autoPlay = Thermite_Internal.unsafeAttribute("autoPlay");
var autoFocus = Thermite_Internal.unsafeAttribute("autoFocus");
var autoComplete = Thermite_Internal.unsafeAttribute("autoComplete");
var async = Thermite_Internal.unsafeAttribute("async");
var alt = Thermite_Internal.unsafeAttribute("alt");
var allowTransparency = Thermite_Internal.unsafeAttribute("allowTransparency");
var allowFullScreen = Thermite_Internal.unsafeAttribute("allowFullScreen");
var action = Thermite_Internal.unsafeAttribute("action");
var accessKey = Thermite_Internal.unsafeAttribute("accessKey");
var acceptCharset = Thermite_Internal.unsafeAttribute("acceptCharset");
var accept = Thermite_Internal.unsafeAttribute("accept");
var _type = Thermite_Internal.unsafeAttribute("type");
var _id = Thermite_Internal.unsafeAttribute("id");
module.exports = {
    wmode: wmode, 
    width: width, 
    value: value, 
    useMap: useMap, 
    _type: _type, 
    title: title, 
    target: target, 
    tabIndex: tabIndex, 
    step: step, 
    start: start, 
    srcSet: srcSet, 
    srcDoc: srcDoc, 
    src: src, 
    spellCheck: spellCheck, 
    span: span, 
    sizes: sizes, 
    size: size, 
    shape: shape, 
    selected: selected, 
    seamless: seamless, 
    scrolling: scrolling, 
    scope: scope, 
    sandbox: sandbox, 
    rowSpan: rowSpan, 
    rows: rows, 
    role: role, 
    required: required, 
    rel: rel, 
    readOnly: readOnly, 
    radioGroup: radioGroup, 
    preload: preload, 
    poster: poster, 
    placeholder: placeholder, 
    pattern: pattern, 
    open: open, 
    noValidate: noValidate, 
    name: name, 
    muted: muted, 
    multiple: multiple, 
    min: min, 
    method: method, 
    mediaGroup: mediaGroup, 
    media: media, 
    maxLength: maxLength, 
    max: max, 
    marginWidth: marginWidth, 
    marginHeight: marginHeight, 
    manifest: manifest, 
    loop: loop, 
    list: list, 
    lang: lang, 
    label: label, 
    key: key, 
    _id: _id, 
    icon: icon, 
    httpEquiv: httpEquiv, 
    htmlFor: htmlFor, 
    hrefLang: hrefLang, 
    href: href, 
    hidden: hidden, 
    height: height, 
    frameBorder: frameBorder, 
    formTarget: formTarget, 
    formNoValidate: formNoValidate, 
    formMethod: formMethod, 
    formEncType: formEncType, 
    formAction: formAction, 
    form: form, 
    encType: encType, 
    draggable: draggable, 
    download: download, 
    disabled: disabled, 
    dir: dir, 
    defer: defer, 
    dateTime: dateTime, 
    crossOrigin: crossOrigin, 
    coords: coords, 
    controls: controls, 
    contextMenu: contextMenu, 
    contentEditable: contentEditable, 
    content: content, 
    colSpan: colSpan, 
    cols: cols, 
    className: className, 
    classID: classID, 
    checked: checked, 
    charSet: charSet, 
    cellSpacing: cellSpacing, 
    cellPadding: cellPadding, 
    autoPlay: autoPlay, 
    autoFocus: autoFocus, 
    autoComplete: autoComplete, 
    async: async, 
    alt: alt, 
    allowTransparency: allowTransparency, 
    allowFullScreen: allowFullScreen, 
    action: action, 
    accessKey: accessKey, 
    acceptCharset: acceptCharset, 
    accept: accept
};

},{"Prelude":20,"Thermite.Internal":29,"Thermite.Types":31}],26:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Thermite_Internal = require("Thermite.Internal");
var Data_Monoid = require("Data.Monoid");
var Thermite_Types = require("Thermite.Types");
var wbr = Thermite_Internal.createElementImpl("body");
var wbr$prime = wbr(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var video = Thermite_Internal.createElementImpl("video");
var video$prime = video(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var $$var = Thermite_Internal.createElementImpl("var");
var var$prime = $$var(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var ul = Thermite_Internal.createElementImpl("ul");
var ul$prime = ul(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var u = Thermite_Internal.createElementImpl("u");
var u$prime = u(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var track = Thermite_Internal.createElementImpl("track");
var track$prime = track(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var tr = Thermite_Internal.createElementImpl("tr");
var tr$prime = tr(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var title = Thermite_Internal.createElementImpl("title");
var title$prime = title(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var time = Thermite_Internal.createElementImpl("time");
var time$prime = time(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var thead = Thermite_Internal.createElementImpl("thead");
var thead$prime = thead(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var th = Thermite_Internal.createElementImpl("th");
var th$prime = th(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var tfoot = Thermite_Internal.createElementImpl("tfoot");
var tfoot$prime = tfoot(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var textarea = Thermite_Internal.createElementImpl("textarea");
var textarea$prime = textarea(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var td = Thermite_Internal.createElementImpl("td");
var td$prime = td(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var tbody = Thermite_Internal.createElementImpl("tbody");
var tbody$prime = tbody(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var table = Thermite_Internal.createElementImpl("table");
var table$prime = table(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var sup = Thermite_Internal.createElementImpl("sup");
var sup$prime = sup(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var summary = Thermite_Internal.createElementImpl("summary");
var summary$prime = summary(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var sub = Thermite_Internal.createElementImpl("sub");
var sub$prime = sub(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var style = Thermite_Internal.createElementImpl("style");
var style$prime = style(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var strong = Thermite_Internal.createElementImpl("strong");
var strong$prime = strong(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var span = Thermite_Internal.createElementImpl("span");
var span$prime = span(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var source = Thermite_Internal.createElementImpl("source");
var source$prime = source(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var small = Thermite_Internal.createElementImpl("small");
var small$prime = small(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var select = Thermite_Internal.createElementImpl("select");
var select$prime = select(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var section = Thermite_Internal.createElementImpl("section");
var section$prime = section(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var script = Thermite_Internal.createElementImpl("script");
var script$prime = script(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var samp = Thermite_Internal.createElementImpl("samp");
var samp$prime = samp(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var s = Thermite_Internal.createElementImpl("s");
var s$prime = s(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var ruby = Thermite_Internal.createElementImpl("ruby");
var ruby$prime = ruby(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var rt = Thermite_Internal.createElementImpl("rt");
var rt$prime = rt(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var rp = Thermite_Internal.createElementImpl("rp");
var rp$prime = rp(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var q = Thermite_Internal.createElementImpl("q");
var q$prime = q(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var progress = Thermite_Internal.createElementImpl("progress");
var progress$prime = progress(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var pre = Thermite_Internal.createElementImpl("pre");
var pre$prime = pre(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var picture = Thermite_Internal.createElementImpl("picture");
var picture$prime = picture(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var param = Thermite_Internal.createElementImpl("param");
var param$prime = param(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var p = Thermite_Internal.createElementImpl("p");
var p$prime = p(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var output = Thermite_Internal.createElementImpl("output");
var output$prime = output(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var option = Thermite_Internal.createElementImpl("option");
var option$prime = option(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var optgroup = Thermite_Internal.createElementImpl("optgroup");
var optgroup$prime = optgroup(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var ol = Thermite_Internal.createElementImpl("ol");
var ol$prime = ol(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var object = Thermite_Internal.createElementImpl("object");
var object$prime = object(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var noscript = Thermite_Internal.createElementImpl("noscript");
var noscript$prime = noscript(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var nav = Thermite_Internal.createElementImpl("nav");
var nav$prime = nav(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var meter = Thermite_Internal.createElementImpl("meter");
var meter$prime = meter(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var meta = Thermite_Internal.createElementImpl("meta");
var meta$prime = meta(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var menuitem = Thermite_Internal.createElementImpl("menuitem");
var menuitem$prime = menuitem(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var menu = Thermite_Internal.createElementImpl("menu");
var menu$prime = menu(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var mark = Thermite_Internal.createElementImpl("mark");
var mark$prime = mark(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var map = Thermite_Internal.createElementImpl("map");
var map$prime = map(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var main = Thermite_Internal.createElementImpl("main");
var main$prime = main(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var link = Thermite_Internal.createElementImpl("link");
var li = Thermite_Internal.createElementImpl("li");
var li$prime = li(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var legend = Thermite_Internal.createElementImpl("legend");
var legend$prime = legend(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var label = Thermite_Internal.createElementImpl("label");
var label$prime = label(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var keygen = Thermite_Internal.createElementImpl("keygen");
var keygen$prime = keygen(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var kbd = Thermite_Internal.createElementImpl("kbd");
var kbd$prime = kbd(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var ins = Thermite_Internal.createElementImpl("ins");
var ins$prime = ins(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var input = Thermite_Internal.createElementImpl("input");
var input$prime = input(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var img = Thermite_Internal.createElementImpl("img");
var img$prime = img(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var iframe = Thermite_Internal.createElementImpl("iframe");
var iframe$prime = iframe(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var i = Thermite_Internal.createElementImpl("i");
var i$prime = i(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var html = Thermite_Internal.createElementImpl("html");
var html$prime = html(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var hr = Thermite_Internal.createElementImpl("hr");
var hr$prime = hr(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var header = Thermite_Internal.createElementImpl("header");
var header$prime = header(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var head = Thermite_Internal.createElementImpl("head");
var head$prime = head(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var h6 = Thermite_Internal.createElementImpl("h6");
var h6$prime = h6(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var h5 = Thermite_Internal.createElementImpl("h5");
var h5$prime = h5(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var h4 = Thermite_Internal.createElementImpl("h4");
var h4$prime = h4(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var h3 = Thermite_Internal.createElementImpl("h3");
var h3$prime = h3(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var h2 = Thermite_Internal.createElementImpl("h2");
var h2$prime = h2(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var h1 = Thermite_Internal.createElementImpl("h1");
var h1$prime = h1(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var form = Thermite_Internal.createElementImpl("form");
var form$prime = form(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var footer = Thermite_Internal.createElementImpl("footer");
var footer$prime = footer(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var figure = Thermite_Internal.createElementImpl("figure");
var figure$prime = figure(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var figcaption = Thermite_Internal.createElementImpl("figcaption");
var figcaption$prime = figcaption(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var fieldset = Thermite_Internal.createElementImpl("fieldset");
var fieldset$prime = fieldset(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var embed = Thermite_Internal.createElementImpl("embed");
var embed$prime = embed(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var em = Thermite_Internal.createElementImpl("em");
var em$prime = em(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var dt = Thermite_Internal.createElementImpl("dt");
var dt$prime = dt(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var dl = Thermite_Internal.createElementImpl("dl");
var dl$prime = dl(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var div = Thermite_Internal.createElementImpl("div");
var div$prime = div(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var dialog = Thermite_Internal.createElementImpl("dialog");
var dialog$prime = dialog(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var dfn = Thermite_Internal.createElementImpl("dfn");
var dfn$prime = dfn(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var details = Thermite_Internal.createElementImpl("details");
var details$prime = details(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var del = Thermite_Internal.createElementImpl("del");
var del$prime = del(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var dd = Thermite_Internal.createElementImpl("dd");
var dd$prime = dd(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var datalist = Thermite_Internal.createElementImpl("datalist");
var datalist$prime = datalist(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var colgroup = Thermite_Internal.createElementImpl("colgroup");
var colgroup$prime = colgroup(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var col = Thermite_Internal.createElementImpl("col");
var col$prime = col(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var code = Thermite_Internal.createElementImpl("code");
var code$prime = code(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var cite = Thermite_Internal.createElementImpl("cite");
var cite$prime = cite(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var caption = Thermite_Internal.createElementImpl("caption");
var caption$prime = caption(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var canvas = Thermite_Internal.createElementImpl("canvas");
var canvas$prime = canvas(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var button = Thermite_Internal.createElementImpl("button");
var button$prime = button(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var br = Thermite_Internal.createElementImpl("br");
var br$prime = br(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var body = Thermite_Internal.createElementImpl("body");
var body$prime = body(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var link$prime = body(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var blockquote = Thermite_Internal.createElementImpl("blockquote");
var blockquote$prime = blockquote(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var big = Thermite_Internal.createElementImpl("big");
var big$prime = big(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var bdo = Thermite_Internal.createElementImpl("bdo");
var bdo$prime = bdo(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var bdi = Thermite_Internal.createElementImpl("bdi");
var bdi$prime = bdi(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var base = Thermite_Internal.createElementImpl("base");
var base$prime = base(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var b = Thermite_Internal.createElementImpl("b");
var b$prime = b(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var audio = Thermite_Internal.createElementImpl("audio");
var audio$prime = audio(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var aside = Thermite_Internal.createElementImpl("aside");
var aside$prime = aside(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var article = Thermite_Internal.createElementImpl("article");
var article$prime = article(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var area = Thermite_Internal.createElementImpl("area");
var area$prime = area(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var address = Thermite_Internal.createElementImpl("address");
var address$prime = address(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var abbr = Thermite_Internal.createElementImpl("abbr");
var abbr$prime = abbr(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var a = Thermite_Internal.createElementImpl("a");
var a$prime = a(Data_Monoid.mempty(Thermite_Types.monoidAttr));
var _data = Thermite_Internal.createElementImpl("data");
var _data$prime = _data(Data_Monoid.mempty(Thermite_Types.monoidAttr));
module.exports = {
    "wbr'": wbr$prime, 
    wbr: wbr, 
    "video'": video$prime, 
    video: video, 
    "var'": var$prime, 
    "var": $$var, 
    "ul'": ul$prime, 
    ul: ul, 
    "u'": u$prime, 
    u: u, 
    "track'": track$prime, 
    track: track, 
    "tr'": tr$prime, 
    tr: tr, 
    "title'": title$prime, 
    title: title, 
    "time'": time$prime, 
    time: time, 
    "thead'": thead$prime, 
    thead: thead, 
    "th'": th$prime, 
    th: th, 
    "tfoot'": tfoot$prime, 
    tfoot: tfoot, 
    "textarea'": textarea$prime, 
    textarea: textarea, 
    "td'": td$prime, 
    td: td, 
    "tbody'": tbody$prime, 
    tbody: tbody, 
    "table'": table$prime, 
    table: table, 
    "sup'": sup$prime, 
    sup: sup, 
    "summary'": summary$prime, 
    summary: summary, 
    "sub'": sub$prime, 
    sub: sub, 
    "style'": style$prime, 
    style: style, 
    "strong'": strong$prime, 
    strong: strong, 
    "span'": span$prime, 
    span: span, 
    "source'": source$prime, 
    source: source, 
    "small'": small$prime, 
    small: small, 
    "select'": select$prime, 
    select: select, 
    "section'": section$prime, 
    section: section, 
    "script'": script$prime, 
    script: script, 
    "samp'": samp$prime, 
    samp: samp, 
    "s'": s$prime, 
    s: s, 
    "ruby'": ruby$prime, 
    ruby: ruby, 
    "rt'": rt$prime, 
    rt: rt, 
    "rp'": rp$prime, 
    rp: rp, 
    "q'": q$prime, 
    q: q, 
    "progress'": progress$prime, 
    progress: progress, 
    "pre'": pre$prime, 
    pre: pre, 
    "picture'": picture$prime, 
    picture: picture, 
    "param'": param$prime, 
    param: param, 
    "p'": p$prime, 
    p: p, 
    "output'": output$prime, 
    output: output, 
    "option'": option$prime, 
    option: option, 
    "optgroup'": optgroup$prime, 
    optgroup: optgroup, 
    "ol'": ol$prime, 
    ol: ol, 
    "object'": object$prime, 
    object: object, 
    "noscript'": noscript$prime, 
    noscript: noscript, 
    "nav'": nav$prime, 
    nav: nav, 
    "meter'": meter$prime, 
    meter: meter, 
    "meta'": meta$prime, 
    meta: meta, 
    "menuitem'": menuitem$prime, 
    menuitem: menuitem, 
    "menu'": menu$prime, 
    menu: menu, 
    "mark'": mark$prime, 
    mark: mark, 
    "map'": map$prime, 
    map: map, 
    "main'": main$prime, 
    main: main, 
    "link'": link$prime, 
    link: link, 
    "li'": li$prime, 
    li: li, 
    "legend'": legend$prime, 
    legend: legend, 
    "label'": label$prime, 
    label: label, 
    "keygen'": keygen$prime, 
    keygen: keygen, 
    "kbd'": kbd$prime, 
    kbd: kbd, 
    "ins'": ins$prime, 
    ins: ins, 
    "input'": input$prime, 
    input: input, 
    "img'": img$prime, 
    img: img, 
    "iframe'": iframe$prime, 
    iframe: iframe, 
    "i'": i$prime, 
    i: i, 
    "html'": html$prime, 
    html: html, 
    "hr'": hr$prime, 
    hr: hr, 
    "header'": header$prime, 
    header: header, 
    "head'": head$prime, 
    head: head, 
    "h6'": h6$prime, 
    h6: h6, 
    "h5'": h5$prime, 
    h5: h5, 
    "h4'": h4$prime, 
    h4: h4, 
    "h3'": h3$prime, 
    h3: h3, 
    "h2'": h2$prime, 
    h2: h2, 
    "h1'": h1$prime, 
    h1: h1, 
    "form'": form$prime, 
    form: form, 
    "footer'": footer$prime, 
    footer: footer, 
    "figure'": figure$prime, 
    figure: figure, 
    "figcaption'": figcaption$prime, 
    figcaption: figcaption, 
    "fieldset'": fieldset$prime, 
    fieldset: fieldset, 
    "embed'": embed$prime, 
    embed: embed, 
    "em'": em$prime, 
    em: em, 
    "dt'": dt$prime, 
    dt: dt, 
    "dl'": dl$prime, 
    dl: dl, 
    "div'": div$prime, 
    div: div, 
    "dialog'": dialog$prime, 
    dialog: dialog, 
    "dfn'": dfn$prime, 
    dfn: dfn, 
    "details'": details$prime, 
    details: details, 
    "del'": del$prime, 
    del: del, 
    "dd'": dd$prime, 
    dd: dd, 
    "datalist'": datalist$prime, 
    datalist: datalist, 
    "_data'": _data$prime, 
    _data: _data, 
    "colgroup'": colgroup$prime, 
    colgroup: colgroup, 
    "col'": col$prime, 
    col: col, 
    "code'": code$prime, 
    code: code, 
    "cite'": cite$prime, 
    cite: cite, 
    "caption'": caption$prime, 
    caption: caption, 
    "canvas'": canvas$prime, 
    canvas: canvas, 
    "button'": button$prime, 
    button: button, 
    "br'": br$prime, 
    br: br, 
    "body'": body$prime, 
    body: body, 
    "blockquote'": blockquote$prime, 
    blockquote: blockquote, 
    "big'": big$prime, 
    big: big, 
    "bdo'": bdo$prime, 
    bdo: bdo, 
    "bdi'": bdi$prime, 
    bdi: bdi, 
    "base'": base$prime, 
    base: base, 
    "b'": b$prime, 
    b: b, 
    "audio'": audio$prime, 
    audio: audio, 
    "aside'": aside$prime, 
    aside: aside, 
    "article'": article$prime, 
    article: article, 
    "area'": area$prime, 
    area: area, 
    "address'": address$prime, 
    address: address, 
    "abbr'": abbr$prime, 
    abbr: abbr, 
    "a'": a$prime, 
    a: a
};

},{"Data.Monoid":18,"Thermite.Internal":29,"Thermite.Types":31}],27:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var Thermite_Internal = require("Thermite.Internal");
var Prelude = require("Prelude");
var Thermite_Types = require("Thermite.Types");
var text = Thermite_Internal.textImpl;
var createElement = Thermite_Internal.createElementImpl;
var component = Thermite_Internal.createElementImpl;
module.exports = {
    component: component, 
    createElement: createElement, 
    text: text
};

},{"Prelude":20,"Thermite.Internal":29,"Thermite.Types":31}],28:[function(require,module,exports){
/* global exports */
"use strict";

// module Thermite.Internal

exports.getStateImpl = function(ctx) {
  return function() {
    return ctx.state.value;
  };
};

exports.setStateImpl = function(ctx) {
  return function(state) {
    return function() {
      ctx.setState({ value: state });
    };
  };
}

exports.textImpl = function(s) {
  return s;
}

exports.createElementImpl = function(element) {
  return function(props) {
    return function(children) {
      if ("dangerouslySetInnerHTML" in props) {
        return React.createElement(element, props);
      } else {
        return React.createElement(element, props, children);
      }
    };
  };
}

exports.unsafeAttribute = function(k) {
  return function(value) {
    var o = {};
    o[k] = value;
    return o;
  };
};

exports.event = function(name) {
  return function(context) {
    return function(f) {
      var o = {}; 
      o[name] = function(e) {
        context.performAction(f(e));
      };
      return o;
    };
  };
};

exports.documentBody = function() {
  return document.body;
};

exports.renderToImpl = function(element) {
  return function(component) {
    return function(props) {
      return function() {
        React.render(React.createElement(component, props), element);
      };
    };
  }
};
},{}],29:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var DOM = require("DOM");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Thermite_Types = require("Thermite.Types");
module.exports = {
    renderToImpl: $foreign.renderToImpl, 
    documentBody: $foreign.documentBody, 
    event: $foreign.event, 
    unsafeAttribute: $foreign.unsafeAttribute, 
    createElementImpl: $foreign.createElementImpl, 
    textImpl: $foreign.textImpl, 
    setStateImpl: $foreign.setStateImpl, 
    getStateImpl: $foreign.getStateImpl
};

},{"./foreign":28,"Control.Monad.Eff":12,"DOM":15,"Data.Maybe":17,"Prelude":20,"Thermite.Types":31}],30:[function(require,module,exports){
/* global exports */
"use strict";

// module Thermite.Types

exports.emptyAttr = {};

exports.appendAttr = function(attr1) {
    return function(attr2) {
        var o = {};
        for (var k in attr1) {
            if (attr1.hasOwnProperty(k)) {
                o[k] = attr1[k];
            }
        }
        for (var k in attr2) {
            if (attr2.hasOwnProperty(k)) {
                o[k] = attr2[k];
            }
        }
        return o;
    };
};

},{}],31:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var semigroupAttr = new Prelude.Semigroup($foreign.appendAttr);
var monoidAttr = new Data_Monoid.Monoid(function () {
    return semigroupAttr;
}, $foreign.emptyAttr);
module.exports = {
    semigroupAttr: semigroupAttr, 
    monoidAttr: monoidAttr
};

},{"./foreign":30,"Data.Maybe":17,"Data.Monoid":18,"Prelude":20}],32:[function(require,module,exports){
/* global exports */
"use strict";

// module Thermite

exports.createClassImpl = function(runAction) {
    return function(maybe) {
        return function(spec) {
            return React.createClass({
                getInitialState: function() {
                    return {
                        value: spec.initialState
                    };
                },
                performAction: function(action) {
                    runAction(this)(spec.performAction(this.props)(action))();
                },
                render: function() {
                    var children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];
                    return spec.render(this)(this.state.value)(this.props)(children);
                },
                componentWillMount: function() {
                    var self = this;
                    maybe(function() {})(function(action) {
                        return function() {
                            self.performAction(action);
                        };
                    })(spec.componentWillMount)();
                },
                displayName: maybe(undefined)(function(a) {
                    return a;
                })(spec.displayName)
            })
        };
    };
};

},{}],33:[function(require,module,exports){
// Generated by psc version 0.7.1.0
"use strict";
var $foreign = require("./foreign");
var Thermite_Action = require("Thermite.Action");
var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var Thermite_Internal = require("Thermite.Internal");
var DOM = require("DOM");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Thermite_Html = require("Thermite.Html");
var Thermite_Types = require("Thermite.Types");
var Spec = function (x) {
    return x;
};
var simpleSpec = function (initialState) {
    return function (performAction) {
        return function (render_1) {
            return {
                initialState: initialState, 
                performAction: performAction, 
                render: render_1, 
                componentWillMount: Data_Maybe.Nothing.value, 
                displayName: Data_Maybe.Nothing.value
            };
        };
    };
};
var renderTo = Thermite_Internal.renderToImpl;
var render = function (cc) {
    return function (props) {
        return function __do() {
            var _6 = Thermite_Internal.documentBody();
            return renderTo(_6)(cc)(props)();
        };
    };
};
var displayName = function (name) {
    return function (_159) {
        var _206 = {};
        for (var _207 in _159) {
            if (_159.hasOwnProperty(_207)) {
                _206[_207] = _159[_207];
            };
        };
        _206.displayName = new Data_Maybe.Just(name);
        return _206;
    };
};
var createClass = $foreign.createClassImpl(Thermite_Action.runAction)(Data_Maybe.maybe);
var componentWillMount = function (action) {
    return function (_158) {
        var _210 = {};
        for (var _211 in _158) {
            if (_158.hasOwnProperty(_211)) {
                _210[_211] = _158[_211];
            };
        };
        _210.componentWillMount = new Data_Maybe.Just(action);
        return _210;
    };
};
module.exports = {
    renderTo: renderTo, 
    render: render, 
    displayName: displayName, 
    createClass: createClass, 
    componentWillMount: componentWillMount, 
    simpleSpec: simpleSpec
};

},{"./foreign":32,"Control.Monad.Eff":12,"DOM":15,"Data.Maybe":17,"Prelude":20,"Thermite.Action":21,"Thermite.Html":27,"Thermite.Internal":29,"Thermite.Types":31}],34:[function(require,module,exports){
require('Chat.Main').main();

},{"Chat.Main":2}]},{},[34]);
